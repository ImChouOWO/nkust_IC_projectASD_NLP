{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\n/** @internal Only used for Dropdown component. Do not use this in your production. */\nvar OverrideContext = /*#__PURE__*/React.createContext(null);\n/** @internal Only used for Dropdown component. Do not use this in your production. */\nexport var OverrideProvider = function OverrideProvider(props) {\n  var children = props.children,\n    restProps = __rest(props, [\"children\"]);\n  var override = React.useContext(OverrideContext);\n  var context = React.useMemo(function () {\n    return Object.assign(Object.assign({}, override), restProps);\n  }, [override, restProps.prefixCls,\n  // restProps.expandIcon, Not mark as deps since this is a ReactNode\n  restProps.mode, restProps.selectable\n  // restProps.validator, Not mark as deps since this is a function\n  ]);\n\n  return /*#__PURE__*/React.createElement(OverrideContext.Provider, {\n    value: context\n  }, children);\n};\nexport default OverrideContext;","map":null,"metadata":{},"sourceType":"module"}