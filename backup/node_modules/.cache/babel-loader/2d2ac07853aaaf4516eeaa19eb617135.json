{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { initMoveMotion, initSlideMotion, slideDownIn, slideDownOut, slideUpIn, slideUpOut } from '../../style/motion';\nimport { resetComponent, textEllipsis } from '../../style';\nvar genItemStyle = function genItemStyle(token) {\n  var controlPaddingHorizontal = token.controlPaddingHorizontal;\n  return {\n    position: 'relative',\n    display: 'block',\n    minHeight: token.controlHeight,\n    padding: \"\".concat((token.controlHeight - token.fontSize * token.lineHeight) / 2, \"px \").concat(controlPaddingHorizontal, \"px\"),\n    color: token.colorText,\n    fontWeight: 'normal',\n    fontSize: token.fontSize,\n    lineHeight: token.lineHeight,\n    boxSizing: 'border-box'\n  };\n};\nvar genSingleStyle = function genSingleStyle(token) {\n  var _disabled, _option, _Object$assign;\n  var antCls = token.antCls,\n    componentCls = token.componentCls;\n  var selectItemCls = \"\".concat(componentCls, \"-item\");\n  return [_defineProperty({}, \"\".concat(componentCls, \"-dropdown\"), Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    position: 'absolute',\n    top: -9999,\n    zIndex: token.zIndexPopup,\n    boxSizing: 'border-box',\n    padding: token.paddingXXS,\n    overflow: 'hidden',\n    fontSize: token.fontSize,\n    // Fix select render lag of long text in chrome\n    // https://github.com/ant-design/ant-design/issues/11456\n    // https://github.com/ant-design/ant-design/issues/11843\n    fontVariant: 'initial',\n    backgroundColor: token.colorBgElevated,\n    borderRadius: token.borderRadiusLG,\n    outline: 'none',\n    boxShadow: token.boxShadowSecondary\n  }, _defineProperty(_Object$assign, \"\\n            &\".concat(antCls, \"-slide-up-enter\").concat(antCls, \"-slide-up-enter-active\").concat(componentCls, \"-dropdown-placement-bottomLeft,\\n            &\").concat(antCls, \"-slide-up-appear\").concat(antCls, \"-slide-up-appear-active\").concat(componentCls, \"-dropdown-placement-bottomLeft\\n          \"), {\n    animationName: slideUpIn\n  }), _defineProperty(_Object$assign, \"\\n            &\".concat(antCls, \"-slide-up-enter\").concat(antCls, \"-slide-up-enter-active\").concat(componentCls, \"-dropdown-placement-topLeft,\\n            &\").concat(antCls, \"-slide-up-appear\").concat(antCls, \"-slide-up-appear-active\").concat(componentCls, \"-dropdown-placement-topLeft\\n          \"), {\n    animationName: slideDownIn\n  }), _defineProperty(_Object$assign, \"&\".concat(antCls, \"-slide-up-leave\").concat(antCls, \"-slide-up-leave-active\").concat(componentCls, \"-dropdown-placement-bottomLeft\"), {\n    animationName: slideUpOut\n  }), _defineProperty(_Object$assign, \"&\".concat(antCls, \"-slide-up-leave\").concat(antCls, \"-slide-up-leave-active\").concat(componentCls, \"-dropdown-placement-topLeft\"), {\n    animationName: slideDownOut\n  }), _defineProperty(_Object$assign, '&-hidden', {\n    display: 'none'\n  }), _defineProperty(_Object$assign, '&-empty', {\n    color: token.colorTextDisabled\n  }), _defineProperty(_Object$assign, \"\".concat(selectItemCls, \"-empty\"), Object.assign(Object.assign({}, genItemStyle(token)), {\n    color: token.colorTextDisabled\n  })), _defineProperty(_Object$assign, \"\".concat(selectItemCls), Object.assign(Object.assign({}, genItemStyle(token)), {\n    cursor: 'pointer',\n    transition: \"background \".concat(token.motionDurationSlow, \" ease\"),\n    borderRadius: token.borderRadiusSM,\n    // =========== Group ============\n    '&-group': {\n      color: token.colorTextDescription,\n      fontSize: token.fontSizeSM,\n      cursor: 'default'\n    },\n    // =========== Option ===========\n    '&-option': (_option = {\n      display: 'flex',\n      '&-content': Object.assign(Object.assign({\n        flex: 'auto'\n      }, textEllipsis), {\n        '> *': Object.assign({}, textEllipsis)\n      }),\n      '&-state': {\n        flex: 'none'\n      }\n    }, _defineProperty(_option, \"&-active:not(\".concat(selectItemCls, \"-option-disabled)\"), {\n      backgroundColor: token.controlItemBgHover\n    }), _defineProperty(_option, \"&-selected:not(\".concat(selectItemCls, \"-option-disabled)\"), _defineProperty({\n      color: token.colorText,\n      fontWeight: token.fontWeightStrong,\n      backgroundColor: token.controlItemBgActive\n    }, \"\".concat(selectItemCls, \"-option-state\"), {\n      color: token.colorPrimary\n    })), _defineProperty(_option, '&-disabled', (_disabled = {}, _defineProperty(_disabled, \"&\".concat(selectItemCls, \"-option-selected\"), {\n      backgroundColor: token.colorBgContainerDisabled\n    }), _defineProperty(_disabled, \"color\", token.colorTextDisabled), _defineProperty(_disabled, \"cursor\", 'not-allowed'), _disabled)), _defineProperty(_option, '&-grouped', {\n      paddingInlineStart: token.controlPaddingHorizontal * 2\n    }), _option)\n  })), _defineProperty(_Object$assign, '&-rtl', {\n    direction: 'rtl'\n  }), _Object$assign))),\n  // Follow code may reuse in other components\n  initSlideMotion(token, 'slide-up'), initSlideMotion(token, 'slide-down'), initMoveMotion(token, 'move-up'), initMoveMotion(token, 'move-down')];\n};\nexport default genSingleStyle;","map":null,"metadata":{},"sourceType":"module"}