{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport CSSMotion from 'rc-motion';\nimport raf from \"rc-util/es/raf\";\nimport { render, unmount } from \"rc-util/es/React/render\";\nimport classNames from 'classnames';\nimport { getTargetWaveColor } from './util';\nfunction validateNum(value) {\n  return Number.isNaN(value) ? 0 : value;\n}\nvar WaveEffect = function WaveEffect(props) {\n  var className = props.className,\n    target = props.target;\n  var divRef = React.useRef(null);\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    color = _React$useState2[0],\n    setWaveColor = _React$useState2[1];\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    borderRadius = _React$useState4[0],\n    setBorderRadius = _React$useState4[1];\n  var _React$useState5 = React.useState(0),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    left = _React$useState6[0],\n    setLeft = _React$useState6[1];\n  var _React$useState7 = React.useState(0),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    top = _React$useState8[0],\n    setTop = _React$useState8[1];\n  var _React$useState9 = React.useState(0),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    width = _React$useState10[0],\n    setWidth = _React$useState10[1];\n  var _React$useState11 = React.useState(0),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    height = _React$useState12[0],\n    setHeight = _React$useState12[1];\n  var _React$useState13 = React.useState(false),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    enabled = _React$useState14[0],\n    setEnabled = _React$useState14[1];\n  var waveStyle = {\n    left: left,\n    top: top,\n    width: width,\n    height: height,\n    borderRadius: borderRadius.map(function (radius) {\n      return \"\".concat(radius, \"px\");\n    }).join(' ')\n  };\n  if (color) {\n    waveStyle['--wave-color'] = color;\n  }\n  function syncPos() {\n    var nodeStyle = getComputedStyle(target);\n    // Get wave color from target\n    setWaveColor(getTargetWaveColor(target));\n    var isStatic = nodeStyle.position === 'static';\n    // Rect\n    var borderLeftWidth = nodeStyle.borderLeftWidth,\n      borderTopWidth = nodeStyle.borderTopWidth;\n    setLeft(isStatic ? target.offsetLeft : validateNum(-parseFloat(borderLeftWidth)));\n    setTop(isStatic ? target.offsetTop : validateNum(-parseFloat(borderTopWidth)));\n    setWidth(target.offsetWidth);\n    setHeight(target.offsetHeight);\n    // Get border radius\n    var borderTopLeftRadius = nodeStyle.borderTopLeftRadius,\n      borderTopRightRadius = nodeStyle.borderTopRightRadius,\n      borderBottomLeftRadius = nodeStyle.borderBottomLeftRadius,\n      borderBottomRightRadius = nodeStyle.borderBottomRightRadius;\n    setBorderRadius([borderTopLeftRadius, borderTopRightRadius, borderBottomRightRadius, borderBottomLeftRadius].map(function (radius) {\n      return validateNum(parseFloat(radius));\n    }));\n  }\n  React.useEffect(function () {\n    if (target) {\n      // We need delay to check position here\n      // since UI may change after click\n      var id = raf(function () {\n        syncPos();\n        setEnabled(true);\n      });\n      // Add resize observer to follow size\n      var resizeObserver;\n      if (typeof ResizeObserver !== 'undefined') {\n        resizeObserver = new ResizeObserver(syncPos);\n        resizeObserver.observe(target);\n      }\n      return function () {\n        raf.cancel(id);\n        resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();\n      };\n    }\n  }, []);\n  if (!enabled) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: true,\n    motionAppear: true,\n    motionName: \"wave-motion\",\n    motionDeadline: 5000,\n    onAppearEnd: function onAppearEnd(_, event) {\n      var _a;\n      if (event.deadline || event.propertyName === 'opacity') {\n        var holder = (_a = divRef.current) === null || _a === void 0 ? void 0 : _a.parentElement;\n        unmount(holder).then(function () {\n          var _a;\n          (_a = holder.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(holder);\n        });\n      }\n      return false;\n    }\n  }, function (_ref) {\n    var motionClassName = _ref.className;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: divRef,\n      className: classNames(className, motionClassName),\n      style: waveStyle\n    });\n  });\n};\nexport default function showWaveEffect(node, className) {\n  // Create holder\n  var holder = document.createElement('div');\n  holder.style.position = 'absolute';\n  holder.style.left = \"0px\";\n  holder.style.top = \"0px\";\n  node === null || node === void 0 ? void 0 : node.insertBefore(holder, node === null || node === void 0 ? void 0 : node.firstChild);\n  render( /*#__PURE__*/React.createElement(WaveEffect, {\n    target: node,\n    className: className\n  }), holder);\n}","map":null,"metadata":{},"sourceType":"module"}