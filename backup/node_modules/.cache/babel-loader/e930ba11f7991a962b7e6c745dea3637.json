{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genPresetColor, resetComponent } from '../../style';\nvar antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nvar antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nvar antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nvar antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nvar antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nvar antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nvar genSharedBadgeStyle = function genSharedBadgeStyle(token) {\n  var _$concat, _Object$assign, _$concat2, _$concat4, _Object$assign2, _Object$assign3, _Object$assign4, _ref5;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls,\n    antCls = token.antCls,\n    badgeFontHeight = token.badgeFontHeight,\n    badgeShadowSize = token.badgeShadowSize,\n    badgeHeightSm = token.badgeHeightSm,\n    motionDurationSlow = token.motionDurationSlow,\n    badgeStatusSize = token.badgeStatusSize,\n    marginXS = token.marginXS,\n    badgeRibbonOffset = token.badgeRibbonOffset;\n  var numberPrefixCls = \"\".concat(antCls, \"-scroll-number\");\n  var ribbonPrefixCls = \"\".concat(antCls, \"-ribbon\");\n  var ribbonWrapperPrefixCls = \"\".concat(antCls, \"-ribbon-wrapper\");\n  var colorPreset = genPresetColor(token, function (colorKey, _ref) {\n    var darkColor = _ref.darkColor;\n    return _defineProperty({}, \"\".concat(componentCls, \"-color-\").concat(colorKey), {\n      background: darkColor\n    });\n  });\n  var statusRibbonPreset = genPresetColor(token, function (colorKey, _ref2) {\n    var darkColor = _ref2.darkColor;\n    return _defineProperty({}, \"&\".concat(ribbonPrefixCls, \"-color-\").concat(colorKey), {\n      background: darkColor,\n      color: darkColor\n    });\n  });\n  return _ref5 = {}, _defineProperty(_ref5, componentCls, Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    position: 'relative',\n    display: 'inline-block',\n    width: 'fit-content',\n    lineHeight: 1\n  }, _defineProperty(_Object$assign, \"\".concat(componentCls, \"-count\"), {\n    zIndex: token.badgeZIndex,\n    minWidth: token.badgeHeight,\n    height: token.badgeHeight,\n    color: token.badgeTextColor,\n    fontWeight: token.badgeFontWeight,\n    fontSize: token.badgeFontSize,\n    lineHeight: \"\".concat(token.badgeHeight, \"px\"),\n    whiteSpace: 'nowrap',\n    textAlign: 'center',\n    background: token.badgeColor,\n    borderRadius: token.badgeHeight / 2,\n    boxShadow: \"0 0 0 \".concat(badgeShadowSize, \"px \").concat(token.badgeShadowColor),\n    transition: \"background \".concat(token.motionDurationMid),\n    a: {\n      color: token.badgeTextColor\n    },\n    'a:hover': {\n      color: token.badgeTextColor\n    },\n    'a:hover &': {\n      background: token.badgeColorHover\n    }\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-count-sm\"), {\n    minWidth: badgeHeightSm,\n    height: badgeHeightSm,\n    fontSize: token.badgeFontSizeSm,\n    lineHeight: \"\".concat(badgeHeightSm, \"px\"),\n    borderRadius: badgeHeightSm / 2\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-multiple-words\"), {\n    padding: \"0 \".concat(token.paddingXS, \"px\")\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-dot\"), {\n    zIndex: token.badgeZIndex,\n    width: token.badgeDotSize,\n    minWidth: token.badgeDotSize,\n    height: token.badgeDotSize,\n    background: token.badgeColor,\n    borderRadius: '100%',\n    boxShadow: \"0 0 0 \".concat(badgeShadowSize, \"px \").concat(token.badgeShadowColor)\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-dot\").concat(numberPrefixCls), {\n    transition: \"background \".concat(motionDurationSlow)\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-count, \").concat(componentCls, \"-dot, \").concat(numberPrefixCls, \"-custom-component\"), _defineProperty({\n    position: 'absolute',\n    top: 0,\n    insetInlineEnd: 0,\n    transform: 'translate(50%, -50%)',\n    transformOrigin: '100% 0%'\n  }, \"\".concat(iconCls, \"-spin\"), {\n    animationName: antBadgeLoadingCircle,\n    animationDuration: token.motionDurationMid,\n    animationIterationCount: 'infinite',\n    animationTimingFunction: 'linear'\n  })), _defineProperty(_Object$assign, \"&\".concat(componentCls, \"-status\"), (_$concat = {\n    lineHeight: 'inherit',\n    verticalAlign: 'baseline'\n  }, _defineProperty(_$concat, \"\".concat(componentCls, \"-status-dot\"), {\n    position: 'relative',\n    top: -1,\n    display: 'inline-block',\n    width: badgeStatusSize,\n    height: badgeStatusSize,\n    verticalAlign: 'middle',\n    borderRadius: '50%'\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-status-success\"), {\n    backgroundColor: token.colorSuccess\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-status-processing\"), {\n    position: 'relative',\n    color: token.colorPrimary,\n    backgroundColor: token.colorPrimary,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      insetInlineStart: 0,\n      width: '100%',\n      height: '100%',\n      borderWidth: badgeShadowSize,\n      borderStyle: 'solid',\n      borderColor: 'inherit',\n      borderRadius: '50%',\n      animationName: antStatusProcessing,\n      animationDuration: token.badgeProcessingDuration,\n      animationIterationCount: 'infinite',\n      animationTimingFunction: 'ease-in-out',\n      content: '\"\"'\n    }\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-status-default\"), {\n    backgroundColor: token.colorTextPlaceholder\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-status-error\"), {\n    backgroundColor: token.colorError\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-status-warning\"), {\n    backgroundColor: token.colorWarning\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-status-text\"), {\n    marginInlineStart: marginXS,\n    color: token.colorText,\n    fontSize: token.fontSize\n  }), _$concat)), _Object$assign)), colorPreset), (_Object$assign2 = {}, _defineProperty(_Object$assign2, \"\".concat(componentCls, \"-zoom-appear, \").concat(componentCls, \"-zoom-enter\"), {\n    animationName: antZoomBadgeIn,\n    animationDuration: token.motionDurationSlow,\n    animationTimingFunction: token.motionEaseOutBack,\n    animationFillMode: 'both'\n  }), _defineProperty(_Object$assign2, \"\".concat(componentCls, \"-zoom-leave\"), {\n    animationName: antZoomBadgeOut,\n    animationDuration: token.motionDurationSlow,\n    animationTimingFunction: token.motionEaseOutBack,\n    animationFillMode: 'both'\n  }), _defineProperty(_Object$assign2, \"&\".concat(componentCls, \"-not-a-wrapper\"), (_$concat2 = {}, _defineProperty(_$concat2, \"\".concat(componentCls, \"-zoom-appear, \").concat(componentCls, \"-zoom-enter\"), {\n    animationName: antNoWrapperZoomBadgeIn,\n    animationDuration: token.motionDurationSlow,\n    animationTimingFunction: token.motionEaseOutBack\n  }), _defineProperty(_$concat2, \"\".concat(componentCls, \"-zoom-leave\"), {\n    animationName: antNoWrapperZoomBadgeOut,\n    animationDuration: token.motionDurationSlow,\n    animationTimingFunction: token.motionEaseOutBack\n  }), _defineProperty(_$concat2, \"&:not(\".concat(componentCls, \"-status)\"), {\n    verticalAlign: 'middle'\n  }), _defineProperty(_$concat2, \"\".concat(numberPrefixCls, \"-custom-component, \").concat(componentCls, \"-count\"), {\n    transform: 'none'\n  }), _defineProperty(_$concat2, \"\".concat(numberPrefixCls, \"-custom-component, \").concat(numberPrefixCls), {\n    position: 'relative',\n    top: 'auto',\n    display: 'block',\n    transformOrigin: '50% 50%'\n  }), _$concat2)), _defineProperty(_Object$assign2, \"\".concat(numberPrefixCls), (_$concat4 = {\n    overflow: 'hidden'\n  }, _defineProperty(_$concat4, \"\".concat(numberPrefixCls, \"-only\"), _defineProperty({\n    position: 'relative',\n    display: 'inline-block',\n    height: token.badgeHeight,\n    transition: \"all \".concat(token.motionDurationSlow, \" \").concat(token.motionEaseOutBack),\n    WebkitTransformStyle: 'preserve-3d',\n    WebkitBackfaceVisibility: 'hidden'\n  }, \"> p\".concat(numberPrefixCls, \"-only-unit\"), {\n    height: token.badgeHeight,\n    margin: 0,\n    WebkitTransformStyle: 'preserve-3d',\n    WebkitBackfaceVisibility: 'hidden'\n  })), _defineProperty(_$concat4, \"\".concat(numberPrefixCls, \"-symbol\"), {\n    verticalAlign: 'top'\n  }), _$concat4)), _defineProperty(_Object$assign2, '&-rtl', _defineProperty({\n    direction: 'rtl'\n  }, \"\".concat(componentCls, \"-count, \").concat(componentCls, \"-dot, \").concat(numberPrefixCls, \"-custom-component\"), {\n    transform: 'translate(-50%, -50%)'\n  })), _Object$assign2))), _defineProperty(_ref5, \"\".concat(ribbonWrapperPrefixCls), {\n    position: 'relative'\n  }), _defineProperty(_ref5, \"\".concat(ribbonPrefixCls), Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign3 = {\n    position: 'absolute',\n    top: marginXS,\n    height: badgeFontHeight,\n    padding: \"0 \".concat(token.paddingXS, \"px\"),\n    color: token.colorPrimary,\n    lineHeight: \"\".concat(badgeFontHeight, \"px\"),\n    whiteSpace: 'nowrap',\n    backgroundColor: token.colorPrimary,\n    borderRadius: token.borderRadiusSM\n  }, _defineProperty(_Object$assign3, \"\".concat(ribbonPrefixCls, \"-text\"), {\n    color: token.colorTextLightSolid\n  }), _defineProperty(_Object$assign3, \"\".concat(ribbonPrefixCls, \"-corner\"), {\n    position: 'absolute',\n    top: '100%',\n    width: badgeRibbonOffset,\n    height: badgeRibbonOffset,\n    color: 'currentcolor',\n    border: \"\".concat(badgeRibbonOffset / 2, \"px solid\"),\n    transform: token.badgeRibbonCornerTransform,\n    transformOrigin: 'top',\n    filter: token.badgeRibbonCornerFilter\n  }), _Object$assign3)), statusRibbonPreset), (_Object$assign4 = {}, _defineProperty(_Object$assign4, \"&\".concat(ribbonPrefixCls, \"-placement-end\"), _defineProperty({\n    insetInlineEnd: -badgeRibbonOffset,\n    borderEndEndRadius: 0\n  }, \"\".concat(ribbonPrefixCls, \"-corner\"), {\n    insetInlineEnd: 0,\n    borderInlineEndColor: 'transparent',\n    borderBlockEndColor: 'transparent'\n  })), _defineProperty(_Object$assign4, \"&\".concat(ribbonPrefixCls, \"-placement-start\"), _defineProperty({\n    insetInlineStart: -badgeRibbonOffset,\n    borderEndStartRadius: 0\n  }, \"\".concat(ribbonPrefixCls, \"-corner\"), {\n    insetInlineStart: 0,\n    borderBlockEndColor: 'transparent',\n    borderInlineStartColor: 'transparent'\n  })), _defineProperty(_Object$assign4, '&-rtl', {\n    direction: 'rtl'\n  }), _Object$assign4))), _ref5;\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', function (token) {\n  var fontSize = token.fontSize,\n    lineHeight = token.lineHeight,\n    fontSizeSM = token.fontSizeSM,\n    lineWidth = token.lineWidth,\n    marginXS = token.marginXS,\n    colorBorderBg = token.colorBorderBg;\n  var badgeFontHeight = Math.round(fontSize * lineHeight);\n  var badgeShadowSize = lineWidth;\n  var badgeZIndex = 'auto';\n  var badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  var badgeTextColor = token.colorBgContainer;\n  var badgeFontWeight = 'normal';\n  var badgeFontSize = fontSizeSM;\n  var badgeColor = token.colorError;\n  var badgeColorHover = token.colorErrorHover;\n  var badgeHeightSm = fontSize;\n  var badgeDotSize = fontSizeSM / 2;\n  var badgeFontSizeSm = fontSizeSM;\n  var badgeStatusSize = fontSizeSM / 2;\n  var badgeToken = mergeToken(token, {\n    badgeFontHeight: badgeFontHeight,\n    badgeShadowSize: badgeShadowSize,\n    badgeZIndex: badgeZIndex,\n    badgeHeight: badgeHeight,\n    badgeTextColor: badgeTextColor,\n    badgeFontWeight: badgeFontWeight,\n    badgeFontSize: badgeFontSize,\n    badgeColor: badgeColor,\n    badgeColorHover: badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm: badgeHeightSm,\n    badgeDotSize: badgeDotSize,\n    badgeFontSizeSm: badgeFontSizeSm,\n    badgeStatusSize: badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: \"brightness(75%)\"\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});","map":null,"metadata":{},"sourceType":"module"}