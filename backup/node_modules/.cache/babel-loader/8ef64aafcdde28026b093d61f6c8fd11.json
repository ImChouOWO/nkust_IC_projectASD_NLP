{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { getSize } from './utils';\nvar Steps = function Steps(props) {\n  var size = props.size,\n    steps = props.steps,\n    _props$percent = props.percent,\n    percent = _props$percent === void 0 ? 0 : _props$percent,\n    _props$strokeWidth = props.strokeWidth,\n    strokeWidth = _props$strokeWidth === void 0 ? 8 : _props$strokeWidth,\n    strokeColor = props.strokeColor,\n    _props$trailColor = props.trailColor,\n    trailColor = _props$trailColor === void 0 ? null : _props$trailColor,\n    prefixCls = props.prefixCls,\n    children = props.children;\n  var current = Math.round(steps * (percent / 100));\n  var stepWidth = size === 'small' ? 2 : 14;\n  var mergedSize = size !== null && size !== void 0 ? size : [stepWidth, strokeWidth];\n  var _getSize = getSize(mergedSize, 'step', {\n      steps: steps,\n      strokeWidth: strokeWidth\n    }),\n    _getSize2 = _slicedToArray(_getSize, 2),\n    width = _getSize2[0],\n    height = _getSize2[1];\n  var unitWidth = width / steps;\n  var styledSteps = new Array(steps);\n  for (var i = 0; i < steps; i++) {\n    var color = Array.isArray(strokeColor) ? strokeColor[i] : strokeColor;\n    styledSteps[i] = /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: classNames(\"\".concat(prefixCls, \"-steps-item\"), _defineProperty({}, \"\".concat(prefixCls, \"-steps-item-active\"), i <= current - 1)),\n      style: {\n        backgroundColor: i <= current - 1 ? color : trailColor,\n        width: unitWidth,\n        height: height\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-steps-outer\")\n  }, styledSteps, children);\n};\nexport default Steps;","map":null,"metadata":{},"sourceType":"module"}