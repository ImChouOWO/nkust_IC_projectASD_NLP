{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusStyle, resetComponent } from '../../style';\nvar genBreadcrumbStyle = function genBreadcrumbStyle(token) {\n  var _$concat2, _Object$assign;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls;\n  return _defineProperty({}, componentCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    color: token.breadcrumbBaseColor,\n    fontSize: token.breadcrumbFontSize\n  }, _defineProperty(_Object$assign, iconCls, {\n    fontSize: token.breadcrumbIconFontSize\n  }), _defineProperty(_Object$assign, \"ol\", {\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: 0,\n    padding: 0,\n    listStyle: 'none'\n  }), _defineProperty(_Object$assign, \"a\", Object.assign({\n    color: token.breadcrumbLinkColor,\n    transition: \"color \".concat(token.motionDurationMid),\n    padding: \"0 \".concat(token.paddingXXS, \"px\"),\n    borderRadius: token.borderRadiusSM,\n    height: token.lineHeight * token.fontSize,\n    display: 'inline-block',\n    marginInline: -token.marginXXS,\n    '&:hover': {\n      color: token.breadcrumbLinkColorHover,\n      backgroundColor: token.colorBgTextHover\n    }\n  }, genFocusStyle(token))), _defineProperty(_Object$assign, \"li:last-child\", {\n    color: token.breadcrumbLastItemColor\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-separator\"), {\n    marginInline: token.breadcrumbSeparatorMargin,\n    color: token.breadcrumbSeparatorColor\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-link\"), _defineProperty({}, \"\\n          > \".concat(iconCls, \" + span,\\n          > \").concat(iconCls, \" + a\\n        \"), {\n    marginInlineStart: token.marginXXS\n  })), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-overlay-link\"), (_$concat2 = {\n    borderRadius: token.borderRadiusSM,\n    height: token.lineHeight * token.fontSize,\n    display: 'inline-block',\n    padding: \"0 \".concat(token.paddingXXS, \"px\"),\n    marginInline: -token.marginXXS\n  }, _defineProperty(_$concat2, \"> \".concat(iconCls), {\n    marginInlineStart: token.marginXXS,\n    fontSize: token.fontSizeIcon\n  }), _defineProperty(_$concat2, '&:hover', {\n    color: token.breadcrumbLinkColorHover,\n    backgroundColor: token.colorBgTextHover,\n    a: {\n      color: token.breadcrumbLinkColorHover\n    }\n  }), _defineProperty(_$concat2, \"a\", {\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  }), _$concat2)), _defineProperty(_Object$assign, \"&\".concat(token.componentCls, \"-rtl\"), {\n    direction: 'rtl'\n  }), _Object$assign)));\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Breadcrumb', function (token) {\n  var BreadcrumbToken = mergeToken(token, {\n    breadcrumbBaseColor: token.colorTextDescription,\n    breadcrumbFontSize: token.fontSize,\n    breadcrumbIconFontSize: token.fontSize,\n    breadcrumbLinkColor: token.colorTextDescription,\n    breadcrumbLinkColorHover: token.colorText,\n    breadcrumbLastItemColor: token.colorText,\n    breadcrumbSeparatorMargin: token.marginXS,\n    breadcrumbSeparatorColor: token.colorTextDescription\n  });\n  return [genBreadcrumbStyle(BreadcrumbToken)];\n});","map":null,"metadata":{},"sourceType":"module"}