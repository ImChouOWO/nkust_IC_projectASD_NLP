{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { resetComponent } from '../../style';\nimport { initZoomMotion } from '../../style/motion';\nimport getArrowStyle from '../../style/placementArrow';\nimport { genComponentStyleHook, mergeToken, PresetColors } from '../../theme/internal';\nvar genBaseStyle = function genBaseStyle(token) {\n  var _Object$assign;\n  var componentCls = token.componentCls,\n    popoverBg = token.popoverBg,\n    popoverColor = token.popoverColor,\n    width = token.width,\n    fontWeightStrong = token.fontWeightStrong,\n    popoverPadding = token.popoverPadding,\n    boxShadowSecondary = token.boxShadowSecondary,\n    colorTextHeading = token.colorTextHeading,\n    borderRadius = token.borderRadiusLG,\n    zIndexPopup = token.zIndexPopup,\n    marginXS = token.marginXS,\n    colorBgElevated = token.colorBgElevated;\n  return [_defineProperty({}, componentCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    position: 'absolute',\n    top: 0,\n    // use `left` to fix https://github.com/ant-design/ant-design/issues/39195\n    left: {\n      _skip_check_: true,\n      value: 0\n    },\n    zIndex: zIndexPopup,\n    fontWeight: 'normal',\n    whiteSpace: 'normal',\n    textAlign: 'start',\n    cursor: 'auto',\n    userSelect: 'text',\n    '--antd-arrow-background-color': colorBgElevated,\n    '&-rtl': {\n      direction: 'rtl'\n    },\n    '&-hidden': {\n      display: 'none'\n    }\n  }, _defineProperty(_Object$assign, \"\".concat(componentCls, \"-content\"), {\n    position: 'relative'\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-inner\"), {\n    backgroundColor: popoverBg,\n    backgroundClip: 'padding-box',\n    borderRadius: borderRadius,\n    boxShadow: boxShadowSecondary,\n    padding: popoverPadding\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-title\"), {\n    minWidth: width,\n    marginBottom: marginXS,\n    color: colorTextHeading,\n    fontWeight: fontWeightStrong\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-inner-content\"), {\n    color: popoverColor\n  }), _Object$assign))),\n  // Arrow Style\n  getArrowStyle(token, {\n    colorBg: 'var(--antd-arrow-background-color)'\n  }), // Pure Render\n  _defineProperty({}, \"\".concat(componentCls, \"-pure\"), _defineProperty({\n    position: 'relative',\n    maxWidth: 'none',\n    margin: token.sizePopupArrow,\n    display: 'inline-block'\n  }, \"\".concat(componentCls, \"-content\"), {\n    display: 'inline-block'\n  }))];\n};\nvar genColorStyle = function genColorStyle(token) {\n  var componentCls = token.componentCls;\n  return _defineProperty({}, componentCls, PresetColors.map(function (colorKey) {\n    var _$concat$concat;\n    var lightColor = token[\"\".concat(colorKey, \"6\")];\n    return _defineProperty({}, \"&\".concat(componentCls, \"-\").concat(colorKey), (_$concat$concat = {\n      '--antd-arrow-background-color': lightColor\n    }, _defineProperty(_$concat$concat, \"\".concat(componentCls, \"-inner\"), {\n      backgroundColor: lightColor\n    }), _defineProperty(_$concat$concat, \"\".concat(componentCls, \"-arrow\"), {\n      background: 'transparent'\n    }), _$concat$concat));\n  }));\n};\nvar genWireframeStyle = function genWireframeStyle(token) {\n  var _componentCls;\n  var componentCls = token.componentCls,\n    lineWidth = token.lineWidth,\n    lineType = token.lineType,\n    colorSplit = token.colorSplit,\n    paddingSM = token.paddingSM,\n    controlHeight = token.controlHeight,\n    fontSize = token.fontSize,\n    lineHeight = token.lineHeight,\n    padding = token.padding;\n  var titlePaddingBlockDist = controlHeight - Math.round(fontSize * lineHeight);\n  var popoverTitlePaddingBlockTop = titlePaddingBlockDist / 2;\n  var popoverTitlePaddingBlockBottom = titlePaddingBlockDist / 2 - lineWidth;\n  var popoverPaddingHorizontal = padding;\n  return _defineProperty({}, componentCls, (_componentCls = {}, _defineProperty(_componentCls, \"\".concat(componentCls, \"-inner\"), {\n    padding: 0\n  }), _defineProperty(_componentCls, \"\".concat(componentCls, \"-title\"), {\n    margin: 0,\n    padding: \"\".concat(popoverTitlePaddingBlockTop, \"px \").concat(popoverPaddingHorizontal, \"px \").concat(popoverTitlePaddingBlockBottom, \"px\"),\n    borderBottom: \"\".concat(lineWidth, \"px \").concat(lineType, \" \").concat(colorSplit)\n  }), _defineProperty(_componentCls, \"\".concat(componentCls, \"-inner-content\"), {\n    padding: \"\".concat(paddingSM, \"px \").concat(popoverPaddingHorizontal, \"px\")\n  }), _componentCls));\n};\nexport default genComponentStyleHook('Popover', function (token) {\n  var colorBgElevated = token.colorBgElevated,\n    colorText = token.colorText,\n    wireframe = token.wireframe;\n  var popoverToken = mergeToken(token, {\n    popoverBg: colorBgElevated,\n    popoverColor: colorText,\n    popoverPadding: 12 // Fixed Value\n  });\n\n  return [genBaseStyle(popoverToken), genColorStyle(popoverToken), wireframe && genWireframeStyle(popoverToken), initZoomMotion(popoverToken, 'zoom-big')];\n}, function (_ref) {\n  var zIndexPopupBase = _ref.zIndexPopupBase;\n  return {\n    zIndexPopup: zIndexPopupBase + 30,\n    width: 177\n  };\n});","map":null,"metadata":{},"sourceType":"module"}