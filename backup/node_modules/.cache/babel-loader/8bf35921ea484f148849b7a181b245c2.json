{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n/* eslint-disable import/prefer-default-export */\nimport { defaultConfig, useToken as useInternalToken } from './internal';\nimport defaultAlgorithm from './themes/default';\nimport darkAlgorithm from './themes/dark';\nimport compactAlgorithm from './themes/compact';\n// ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n/** Get current context Design Token. Will be different if you are using nest theme config. */\nfunction useToken() {\n  var _useInternalToken = useInternalToken(),\n    _useInternalToken2 = _slicedToArray(_useInternalToken, 3),\n    theme = _useInternalToken2[0],\n    token = _useInternalToken2[1],\n    hashId = _useInternalToken2[2];\n  return {\n    theme: theme,\n    token: token,\n    hashId: hashId\n  };\n}\nexport default {\n  /** @private Test Usage. Do not use in production. */\n  defaultConfig: defaultConfig,\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken: useToken,\n  defaultAlgorithm: defaultAlgorithm,\n  darkAlgorithm: darkAlgorithm,\n  compactAlgorithm: compactAlgorithm\n};","map":null,"metadata":{},"sourceType":"module"}