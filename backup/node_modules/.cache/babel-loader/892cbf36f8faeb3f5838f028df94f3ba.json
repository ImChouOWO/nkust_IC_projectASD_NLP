{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport React, { useContext, useMemo } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Tooltip from '../tooltip';\nimport warning from '../_util/warning';\nimport FloatButtonGroupContext from './context';\nimport Content from './FloatButtonContent';\nimport useStyle from './style';\nexport var floatButtonPrefixCls = 'float-btn';\nvar FloatButton = function FloatButton(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    rootClassName = props.rootClassName,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'default' : _props$type,\n    _props$shape = props.shape,\n    shape = _props$shape === void 0 ? 'circle' : _props$shape,\n    icon = props.icon,\n    description = props.description,\n    tooltip = props.tooltip,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"type\", \"shape\", \"icon\", \"description\", \"tooltip\"]);\n  var _useContext = useContext(ConfigContext),\n    getPrefixCls = _useContext.getPrefixCls,\n    direction = _useContext.direction;\n  var groupShape = useContext(FloatButtonGroupContext);\n  var prefixCls = getPrefixCls(floatButtonPrefixCls, customizePrefixCls);\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  var mergeShape = groupShape || shape;\n  var classString = classNames(hashId, prefixCls, className, rootClassName, \"\".concat(prefixCls, \"-\").concat(type), \"\".concat(prefixCls, \"-\").concat(mergeShape), _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n  var contentProps = useMemo(function () {\n    return {\n      prefixCls: prefixCls,\n      description: description,\n      icon: icon,\n      type: type\n    };\n  }, [prefixCls, description, icon, type]);\n  var buttonNode = /*#__PURE__*/React.createElement(Tooltip, {\n    title: tooltip,\n    placement: direction === 'rtl' ? 'right' : 'left'\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-body\")\n  }, /*#__PURE__*/React.createElement(Content, Object.assign({}, contentProps))));\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(shape === 'circle' && description), 'FloatButton', 'supported only when `shape` is `square`. Due to narrow space for text, short sentence is recommended.') : void 0;\n  }\n  return wrapSSR(props.href ? /*#__PURE__*/React.createElement(\"a\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: classString\n  }), buttonNode) : /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: classString,\n    type: \"button\"\n  }), buttonNode));\n};\nif (process.env.NODE_ENV !== 'production') {\n  FloatButton.displayName = 'FloatButton';\n}\nvar ForwardFloatButton = /*#__PURE__*/React.forwardRef(FloatButton);\nexport default ForwardFloatButton;","map":null,"metadata":{},"sourceType":"module"}