{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nexport default function useTextValueMapping(_ref) {\n  var valueTexts = _ref.valueTexts,\n    onTextChange = _ref.onTextChange;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    text = _React$useState2[0],\n    setInnerText = _React$useState2[1];\n  var valueTextsRef = React.useRef([]);\n  valueTextsRef.current = valueTexts;\n  function triggerTextChange(value) {\n    setInnerText(value);\n    onTextChange(value);\n  }\n  function resetText() {\n    setInnerText(valueTextsRef.current[0]);\n  }\n  useLayoutEffect(function () {\n    if (valueTexts.every(function (valText) {\n      return valText !== text;\n    })) {\n      resetText();\n    }\n  }, [valueTexts.join('||')]);\n  return [text, triggerTextChange, resetText];\n}","map":null,"metadata":{},"sourceType":"module"}