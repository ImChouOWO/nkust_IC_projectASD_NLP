{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from \"../Cell\";\nimport TableContext from \"../context/TableContext\";\nimport { useContext } from '@rc-component/context';\nimport { getCellFixedInfo } from \"../utils/fixUtil\";\nimport SummaryContext from \"./SummaryContext\";\nexport default function SummaryCell(_ref) {\n  var className = _ref.className,\n    index = _ref.index,\n    children = _ref.children,\n    _ref$colSpan = _ref.colSpan,\n    colSpan = _ref$colSpan === void 0 ? 1 : _ref$colSpan,\n    rowSpan = _ref.rowSpan,\n    align = _ref.align;\n  var _useContext = useContext(TableContext, ['prefixCls', 'direction']),\n    prefixCls = _useContext.prefixCls,\n    direction = _useContext.direction;\n  var _React$useContext = React.useContext(SummaryContext),\n    scrollColumnIndex = _React$useContext.scrollColumnIndex,\n    stickyOffsets = _React$useContext.stickyOffsets,\n    flattenColumns = _React$useContext.flattenColumns,\n    columns = _React$useContext.columns;\n  var lastIndex = index + colSpan - 1;\n  var mergedColSpan = lastIndex + 1 === scrollColumnIndex ? colSpan + 1 : colSpan;\n  var fixedInfo = getCellFixedInfo(index, index + mergedColSpan - 1, flattenColumns, stickyOffsets, direction, columns === null || columns === void 0 ? void 0 : columns[index]);\n  return /*#__PURE__*/React.createElement(Cell, _extends({\n    className: className,\n    index: index,\n    component: \"td\",\n    prefixCls: prefixCls,\n    record: null,\n    dataIndex: null,\n    align: align,\n    colSpan: mergedColSpan,\n    rowSpan: rowSpan,\n    render: function render() {\n      return children;\n    }\n  }, fixedInfo));\n}","map":null,"metadata":{},"sourceType":"module"}