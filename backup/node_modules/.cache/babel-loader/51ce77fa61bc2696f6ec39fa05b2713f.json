{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport React, { useContext, useRef } from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport { cloneElement } from '../reactNode';\nimport useStyle from './style';\nimport useWave from './useWave';\nvar Wave = function Wave(props) {\n  var children = props.children,\n    disabled = props.disabled;\n  var _useContext = useContext(ConfigContext),\n    getPrefixCls = _useContext.getPrefixCls;\n  var containerRef = useRef(null);\n  // ============================== Style ===============================\n  var prefixCls = getPrefixCls('wave');\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    hashId = _useStyle2[1]; // =============================== Wave ===============================\n  var showWave = useWave(containerRef, classNames(prefixCls, hashId));\n  // ============================== Effect ==============================\n  React.useEffect(function () {\n    var node = containerRef.current;\n    if (!node || node.nodeType !== 1 || disabled) {\n      return;\n    }\n    // Click handler\n    var onClick = function onClick(e) {\n      // Fix radio button click twice\n      if (e.target.tagName === 'INPUT' || !isVisible(e.target) ||\n      // No need wave\n      !node.getAttribute || node.getAttribute('disabled') || node.disabled || node.className.includes('disabled') || node.className.includes('-leave')) {\n        return;\n      }\n      showWave();\n    };\n    // Bind events\n    node.addEventListener('click', onClick, true);\n    return function () {\n      node.removeEventListener('click', onClick, true);\n    };\n  }, [disabled]);\n  // ============================== Render ==============================\n  if (! /*#__PURE__*/React.isValidElement(children)) {\n    return children !== null && children !== void 0 ? children : null;\n  }\n  var ref = supportRef(children) ? composeRef(children.ref, containerRef) : containerRef;\n  return cloneElement(children, {\n    ref: ref\n  });\n};\nif (process.env.NODE_ENV !== 'production') {\n  Wave.displayName = 'Wave';\n}\nexport default Wave;","map":null,"metadata":{},"sourceType":"module"}