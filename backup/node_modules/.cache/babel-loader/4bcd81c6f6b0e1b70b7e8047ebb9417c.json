{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\n// ============================== Shared ==============================\nvar genSharedDividerStyle = function genSharedDividerStyle(token) {\n  var _Object$assign;\n  var componentCls = token.componentCls,\n    sizePaddingEdgeHorizontal = token.sizePaddingEdgeHorizontal,\n    colorSplit = token.colorSplit,\n    lineWidth = token.lineWidth;\n  return _defineProperty({}, componentCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    borderBlockStart: \"\".concat(lineWidth, \"px solid \").concat(colorSplit),\n    // vertical\n    '&-vertical': {\n      position: 'relative',\n      top: '-0.06em',\n      display: 'inline-block',\n      height: '0.9em',\n      margin: \"0 \".concat(token.dividerVerticalGutterMargin, \"px\"),\n      verticalAlign: 'middle',\n      borderTop: 0,\n      borderInlineStart: \"\".concat(lineWidth, \"px solid \").concat(colorSplit)\n    },\n    '&-horizontal': {\n      display: 'flex',\n      clear: 'both',\n      width: '100%',\n      minWidth: '100%',\n      margin: \"\".concat(token.dividerHorizontalGutterMargin, \"px 0\")\n    }\n  }, _defineProperty(_Object$assign, \"&-horizontal\".concat(componentCls, \"-with-text\"), {\n    display: 'flex',\n    alignItems: 'center',\n    margin: \"\".concat(token.dividerHorizontalWithTextGutterMargin, \"px 0\"),\n    color: token.colorTextHeading,\n    fontWeight: 500,\n    fontSize: token.fontSizeLG,\n    whiteSpace: 'nowrap',\n    textAlign: 'center',\n    borderBlockStart: \"0 \".concat(colorSplit),\n    '&::before, &::after': {\n      position: 'relative',\n      width: '50%',\n      borderBlockStart: \"\".concat(lineWidth, \"px solid transparent\"),\n      // Chrome not accept `inherit` in `border-top`\n      borderBlockStartColor: 'inherit',\n      borderBlockEnd: 0,\n      transform: 'translateY(50%)',\n      content: \"''\"\n    }\n  }), _defineProperty(_Object$assign, \"&-horizontal\".concat(componentCls, \"-with-text-left\"), {\n    '&::before': {\n      width: '5%'\n    },\n    '&::after': {\n      width: '95%'\n    }\n  }), _defineProperty(_Object$assign, \"&-horizontal\".concat(componentCls, \"-with-text-right\"), {\n    '&::before': {\n      width: '95%'\n    },\n    '&::after': {\n      width: '5%'\n    }\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-inner-text\"), {\n    display: 'inline-block',\n    padding: '0 1em'\n  }), _defineProperty(_Object$assign, '&-dashed', {\n    background: 'none',\n    borderColor: colorSplit,\n    borderStyle: 'dashed',\n    borderWidth: \"\".concat(lineWidth, \"px 0 0\")\n  }), _defineProperty(_Object$assign, \"&-horizontal\".concat(componentCls, \"-with-text\").concat(componentCls, \"-dashed\"), {\n    '&::before, &::after': {\n      borderStyle: 'dashed none none'\n    }\n  }), _defineProperty(_Object$assign, \"&-vertical\".concat(componentCls, \"-dashed\"), {\n    borderInlineStart: lineWidth,\n    borderInlineEnd: 0,\n    borderBlockStart: 0,\n    borderBlockEnd: 0\n  }), _defineProperty(_Object$assign, \"&-plain\".concat(componentCls, \"-with-text\"), {\n    color: token.colorText,\n    fontWeight: 'normal',\n    fontSize: token.fontSize\n  }), _defineProperty(_Object$assign, \"&-horizontal\".concat(componentCls, \"-with-text-left\").concat(componentCls, \"-no-default-orientation-margin-left\"), _defineProperty({\n    '&::before': {\n      width: 0\n    },\n    '&::after': {\n      width: '100%'\n    }\n  }, \"\".concat(componentCls, \"-inner-text\"), {\n    paddingInlineStart: sizePaddingEdgeHorizontal\n  })), _defineProperty(_Object$assign, \"&-horizontal\".concat(componentCls, \"-with-text-right\").concat(componentCls, \"-no-default-orientation-margin-right\"), _defineProperty({\n    '&::before': {\n      width: '100%'\n    },\n    '&::after': {\n      width: 0\n    }\n  }, \"\".concat(componentCls, \"-inner-text\"), {\n    paddingInlineEnd: sizePaddingEdgeHorizontal\n  })), _Object$assign)));\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Divider', function (token) {\n  var dividerToken = mergeToken(token, {\n    dividerVerticalGutterMargin: token.marginXS,\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, {\n  sizePaddingEdgeHorizontal: 0\n});","map":null,"metadata":{},"sourceType":"module"}