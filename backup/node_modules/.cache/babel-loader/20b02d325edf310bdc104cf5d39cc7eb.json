{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusStyle, resetComponent } from '../../style';\nvar genSwitchSmallStyle = function genSwitchSmallStyle(token) {\n  var _$concat, _$concat2, _$concat3, _not$concat, _$concat4;\n  var componentCls = token.componentCls;\n  var switchInnerCls = \"\".concat(componentCls, \"-inner\");\n  return _defineProperty({}, componentCls, _defineProperty({}, \"&\".concat(componentCls, \"-small\"), (_$concat4 = {\n    minWidth: token.switchMinWidthSM,\n    height: token.switchHeightSM,\n    lineHeight: \"\".concat(token.switchHeightSM, \"px\")\n  }, _defineProperty(_$concat4, \"\".concat(componentCls, \"-inner\"), (_$concat = {\n    paddingInlineStart: token.switchInnerMarginMaxSM,\n    paddingInlineEnd: token.switchInnerMarginMinSM\n  }, _defineProperty(_$concat, \"\".concat(switchInnerCls, \"-checked\"), {\n    marginInlineStart: \"calc(-100% + \".concat(token.switchPinSizeSM + token.switchPadding * 2, \"px - \").concat(token.switchInnerMarginMaxSM * 2, \"px)\"),\n    marginInlineEnd: \"calc(100% - \".concat(token.switchPinSizeSM + token.switchPadding * 2, \"px + \").concat(token.switchInnerMarginMaxSM * 2, \"px)\")\n  }), _defineProperty(_$concat, \"\".concat(switchInnerCls, \"-unchecked\"), {\n    marginTop: -token.switchHeightSM,\n    marginInlineStart: 0,\n    marginInlineEnd: 0\n  }), _$concat)), _defineProperty(_$concat4, \"\".concat(componentCls, \"-handle\"), {\n    width: token.switchPinSizeSM,\n    height: token.switchPinSizeSM\n  }), _defineProperty(_$concat4, \"\".concat(componentCls, \"-loading-icon\"), {\n    top: (token.switchPinSizeSM - token.switchLoadingIconSize) / 2,\n    fontSize: token.switchLoadingIconSize\n  }), _defineProperty(_$concat4, \"&\".concat(componentCls, \"-checked\"), (_$concat3 = {}, _defineProperty(_$concat3, \"\".concat(componentCls, \"-inner\"), (_$concat2 = {\n    paddingInlineStart: token.switchInnerMarginMinSM,\n    paddingInlineEnd: token.switchInnerMarginMaxSM\n  }, _defineProperty(_$concat2, \"\".concat(switchInnerCls, \"-checked\"), {\n    marginInlineStart: 0,\n    marginInlineEnd: 0\n  }), _defineProperty(_$concat2, \"\".concat(switchInnerCls, \"-unchecked\"), {\n    marginInlineStart: \"calc(100% - \".concat(token.switchPinSizeSM + token.switchPadding * 2, \"px + \").concat(token.switchInnerMarginMaxSM * 2, \"px)\"),\n    marginInlineEnd: \"calc(-100% + \".concat(token.switchPinSizeSM + token.switchPadding * 2, \"px - \").concat(token.switchInnerMarginMaxSM * 2, \"px)\")\n  }), _$concat2)), _defineProperty(_$concat3, \"\".concat(componentCls, \"-handle\"), {\n    insetInlineStart: \"calc(100% - \".concat(token.switchPinSizeSM + token.switchPadding, \"px)\")\n  }), _$concat3)), _defineProperty(_$concat4, \"&:not(\".concat(componentCls, \"-disabled):active\"), (_not$concat = {}, _defineProperty(_not$concat, \"&:not(\".concat(componentCls, \"-checked) \").concat(switchInnerCls), _defineProperty({}, \"\".concat(switchInnerCls, \"-unchecked\"), {\n    marginInlineStart: token.marginXXS / 2,\n    marginInlineEnd: -token.marginXXS / 2\n  })), _defineProperty(_not$concat, \"&\".concat(componentCls, \"-checked \").concat(switchInnerCls), _defineProperty({}, \"\".concat(switchInnerCls, \"-checked\"), {\n    marginInlineStart: -token.marginXXS / 2,\n    marginInlineEnd: token.marginXXS / 2\n  })), _not$concat)), _$concat4)));\n};\nvar genSwitchLoadingStyle = function genSwitchLoadingStyle(token) {\n  var _componentCls2;\n  var componentCls = token.componentCls;\n  return _defineProperty({}, componentCls, (_componentCls2 = {}, _defineProperty(_componentCls2, \"\".concat(componentCls, \"-loading-icon\").concat(token.iconCls), {\n    position: 'relative',\n    top: (token.switchPinSize - token.fontSize) / 2,\n    color: token.switchLoadingIconColor,\n    verticalAlign: 'top'\n  }), _defineProperty(_componentCls2, \"&\".concat(componentCls, \"-checked \").concat(componentCls, \"-loading-icon\"), {\n    color: token.switchColor\n  }), _componentCls2));\n};\nvar genSwitchHandleStyle = function genSwitchHandleStyle(token) {\n  var _not$concat2, _componentCls3;\n  var componentCls = token.componentCls;\n  var switchHandleCls = \"\".concat(componentCls, \"-handle\");\n  return _defineProperty({}, componentCls, (_componentCls3 = {}, _defineProperty(_componentCls3, switchHandleCls, {\n    position: 'absolute',\n    top: token.switchPadding,\n    insetInlineStart: token.switchPadding,\n    width: token.switchPinSize,\n    height: token.switchPinSize,\n    transition: \"all \".concat(token.switchDuration, \" ease-in-out\"),\n    '&::before': {\n      position: 'absolute',\n      top: 0,\n      insetInlineEnd: 0,\n      bottom: 0,\n      insetInlineStart: 0,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.switchPinSize / 2,\n      boxShadow: token.switchHandleShadow,\n      transition: \"all \".concat(token.switchDuration, \" ease-in-out\"),\n      content: '\"\"'\n    }\n  }), _defineProperty(_componentCls3, \"&\".concat(componentCls, \"-checked \").concat(switchHandleCls), {\n    insetInlineStart: \"calc(100% - \".concat(token.switchPinSize + token.switchPadding, \"px)\")\n  }), _defineProperty(_componentCls3, \"&:not(\".concat(componentCls, \"-disabled):active\"), (_not$concat2 = {}, _defineProperty(_not$concat2, \"\".concat(switchHandleCls, \"::before\"), {\n    insetInlineEnd: token.switchHandleActiveInset,\n    insetInlineStart: 0\n  }), _defineProperty(_not$concat2, \"&\".concat(componentCls, \"-checked \").concat(switchHandleCls, \"::before\"), {\n    insetInlineEnd: 0,\n    insetInlineStart: token.switchHandleActiveInset\n  }), _not$concat2)), _componentCls3));\n};\nvar genSwitchInnerStyle = function genSwitchInnerStyle(token) {\n  var _switchInnerCls, _$concat$concat2, _not$concat3, _componentCls4;\n  var componentCls = token.componentCls;\n  var switchInnerCls = \"\".concat(componentCls, \"-inner\");\n  return _defineProperty({}, componentCls, (_componentCls4 = {}, _defineProperty(_componentCls4, switchInnerCls, (_switchInnerCls = {\n    display: 'block',\n    overflow: 'hidden',\n    borderRadius: 100,\n    height: '100%',\n    paddingInlineStart: token.switchInnerMarginMax,\n    paddingInlineEnd: token.switchInnerMarginMin,\n    transition: \"padding-inline-start \".concat(token.switchDuration, \" ease-in-out, padding-inline-end \").concat(token.switchDuration, \" ease-in-out\")\n  }, _defineProperty(_switchInnerCls, \"\".concat(switchInnerCls, \"-checked, \").concat(switchInnerCls, \"-unchecked\"), {\n    display: 'block',\n    color: token.colorTextLightSolid,\n    fontSize: token.fontSizeSM,\n    transition: \"margin-inline-start \".concat(token.switchDuration, \" ease-in-out, margin-inline-end \").concat(token.switchDuration, \" ease-in-out\"),\n    pointerEvents: 'none'\n  }), _defineProperty(_switchInnerCls, \"\".concat(switchInnerCls, \"-checked\"), {\n    marginInlineStart: \"calc(-100% + \".concat(token.switchPinSize + token.switchPadding * 2, \"px - \").concat(token.switchInnerMarginMax * 2, \"px)\"),\n    marginInlineEnd: \"calc(100% - \".concat(token.switchPinSize + token.switchPadding * 2, \"px + \").concat(token.switchInnerMarginMax * 2, \"px)\")\n  }), _defineProperty(_switchInnerCls, \"\".concat(switchInnerCls, \"-unchecked\"), {\n    marginTop: -token.switchHeight,\n    marginInlineStart: 0,\n    marginInlineEnd: 0\n  }), _switchInnerCls)), _defineProperty(_componentCls4, \"&\".concat(componentCls, \"-checked \").concat(switchInnerCls), (_$concat$concat2 = {\n    paddingInlineStart: token.switchInnerMarginMin,\n    paddingInlineEnd: token.switchInnerMarginMax\n  }, _defineProperty(_$concat$concat2, \"\".concat(switchInnerCls, \"-checked\"), {\n    marginInlineStart: 0,\n    marginInlineEnd: 0\n  }), _defineProperty(_$concat$concat2, \"\".concat(switchInnerCls, \"-unchecked\"), {\n    marginInlineStart: \"calc(100% - \".concat(token.switchPinSize + token.switchPadding * 2, \"px + \").concat(token.switchInnerMarginMax * 2, \"px)\"),\n    marginInlineEnd: \"calc(-100% + \".concat(token.switchPinSize + token.switchPadding * 2, \"px - \").concat(token.switchInnerMarginMax * 2, \"px)\")\n  }), _$concat$concat2)), _defineProperty(_componentCls4, \"&:not(\".concat(componentCls, \"-disabled):active\"), (_not$concat3 = {}, _defineProperty(_not$concat3, \"&:not(\".concat(componentCls, \"-checked) \").concat(switchInnerCls), _defineProperty({}, \"\".concat(switchInnerCls, \"-unchecked\"), {\n    marginInlineStart: token.switchPadding * 2,\n    marginInlineEnd: -token.switchPadding * 2\n  })), _defineProperty(_not$concat3, \"&\".concat(componentCls, \"-checked \").concat(switchInnerCls), _defineProperty({}, \"\".concat(switchInnerCls, \"-checked\"), {\n    marginInlineStart: -token.switchPadding * 2,\n    marginInlineEnd: token.switchPadding * 2\n  })), _not$concat3)), _componentCls4));\n};\nvar genSwitchStyle = function genSwitchStyle(token) {\n  var _Object$assign2;\n  var componentCls = token.componentCls;\n  return _defineProperty({}, componentCls, Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), _defineProperty({\n    position: 'relative',\n    display: 'inline-block',\n    boxSizing: 'border-box',\n    minWidth: token.switchMinWidth,\n    height: token.switchHeight,\n    lineHeight: \"\".concat(token.switchHeight, \"px\"),\n    verticalAlign: 'middle',\n    background: token.colorTextQuaternary,\n    border: '0',\n    borderRadius: 100,\n    cursor: 'pointer',\n    transition: \"all \".concat(token.motionDurationMid),\n    userSelect: 'none'\n  }, \"&:hover:not(\".concat(componentCls, \"-disabled)\"), {\n    background: token.colorTextTertiary\n  })), genFocusStyle(token)), (_Object$assign2 = {}, _defineProperty(_Object$assign2, \"&\".concat(componentCls, \"-checked\"), _defineProperty({\n    background: token.switchColor\n  }, \"&:hover:not(\".concat(componentCls, \"-disabled)\"), {\n    background: token.colorPrimaryHover\n  })), _defineProperty(_Object$assign2, \"&\".concat(componentCls, \"-loading, &\").concat(componentCls, \"-disabled\"), {\n    cursor: 'not-allowed',\n    opacity: token.switchDisabledOpacity,\n    '*': {\n      boxShadow: 'none',\n      cursor: 'not-allowed'\n    }\n  }), _defineProperty(_Object$assign2, \"&\".concat(componentCls, \"-rtl\"), {\n    direction: 'rtl'\n  }), _Object$assign2)));\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Switch', function (token) {\n  var switchHeight = token.fontSize * token.lineHeight;\n  var switchHeightSM = token.controlHeight / 2;\n  var switchPadding = 2; // This is magic\n  var switchPinSize = switchHeight - switchPadding * 2;\n  var switchPinSizeSM = switchHeightSM - switchPadding * 2;\n  var switchToken = mergeToken(token, {\n    switchMinWidth: switchPinSize * 2 + switchPadding * 4,\n    switchHeight: switchHeight,\n    switchDuration: token.motionDurationMid,\n    switchColor: token.colorPrimary,\n    switchDisabledOpacity: token.opacityLoading,\n    switchInnerMarginMin: switchPinSize / 2,\n    switchInnerMarginMax: switchPinSize + switchPadding + switchPadding * 2,\n    switchPadding: switchPadding,\n    switchPinSize: switchPinSize,\n    switchBg: token.colorBgContainer,\n    switchMinWidthSM: switchPinSizeSM * 2 + switchPadding * 2,\n    switchHeightSM: switchHeightSM,\n    switchInnerMarginMinSM: switchPinSizeSM / 2,\n    switchInnerMarginMaxSM: switchPinSizeSM + switchPadding + switchPadding * 2,\n    switchPinSizeSM: switchPinSizeSM,\n    switchHandleShadow: \"0 2px 4px 0 \".concat(new TinyColor('#00230b').setAlpha(0.2).toRgbString()),\n    switchLoadingIconSize: token.fontSizeIcon * 0.75,\n    switchLoadingIconColor: \"rgba(0, 0, 0, \".concat(token.opacityLoading, \")\"),\n    switchHandleActiveInset: '-30%'\n  });\n  return [genSwitchStyle(switchToken),\n  // inner style\n  genSwitchInnerStyle(switchToken),\n  // handle style\n  genSwitchHandleStyle(switchToken),\n  // loading style\n  genSwitchLoadingStyle(switchToken),\n  // small style\n  genSwitchSmallStyle(switchToken)];\n});","map":null,"metadata":{},"sourceType":"module"}