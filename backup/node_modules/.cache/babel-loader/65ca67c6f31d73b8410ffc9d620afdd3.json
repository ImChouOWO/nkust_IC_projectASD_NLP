{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useMessage from '../message/useMessage';\nimport useModal from '../modal/useModal';\nimport useNotification from '../notification/useNotification';\nimport AppContext, { AppConfigContext } from './context';\nimport useStyle from './style';\nvar useApp = function useApp() {\n  return React.useContext(AppContext);\n};\nvar App = function App(props) {\n  var customizePrefixCls = props.prefixCls,\n    children = props.children,\n    className = props.className,\n    rootClassName = props.rootClassName,\n    message = props.message,\n    notification = props.notification,\n    style = props.style;\n  var _useContext = useContext(ConfigContext),\n    getPrefixCls = _useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('app', customizePrefixCls);\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  var customClassName = classNames(hashId, prefixCls, className, rootClassName);\n  var appConfig = useContext(AppConfigContext);\n  var mergedAppConfig = React.useMemo(function () {\n    return {\n      message: Object.assign(Object.assign({}, appConfig.message), message),\n      notification: Object.assign(Object.assign({}, appConfig.notification), notification)\n    };\n  }, [message, notification, appConfig.message, appConfig.message]);\n  var _useMessage = useMessage(mergedAppConfig.message),\n    _useMessage2 = _slicedToArray(_useMessage, 2),\n    messageApi = _useMessage2[0],\n    messageContextHolder = _useMessage2[1];\n  var _useNotification = useNotification(mergedAppConfig.notification),\n    _useNotification2 = _slicedToArray(_useNotification, 2),\n    notificationApi = _useNotification2[0],\n    notificationContextHolder = _useNotification2[1];\n  var _useModal = useModal(),\n    _useModal2 = _slicedToArray(_useModal, 2),\n    ModalApi = _useModal2[0],\n    ModalContextHolder = _useModal2[1];\n  var memoizedContextValue = React.useMemo(function () {\n    return {\n      message: messageApi,\n      notification: notificationApi,\n      modal: ModalApi\n    };\n  }, [messageApi, notificationApi, ModalApi]);\n  return wrapSSR( /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: memoizedContextValue\n  }, /*#__PURE__*/React.createElement(AppConfigContext.Provider, {\n    value: mergedAppConfig\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: customClassName,\n    style: style\n  }, ModalContextHolder, messageContextHolder, notificationContextHolder, children))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  App.displayName = 'App';\n}\nApp.useApp = useApp;\nexport default App;","map":null,"metadata":{},"sourceType":"module"}