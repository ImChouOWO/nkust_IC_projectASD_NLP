{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport EyeOutlined from \"@ant-design/icons/es/icons/EyeOutlined\";\nimport classNames from 'classnames';\nimport RcImage from 'rc-image';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport defaultLocale from '../locale/en_US';\nimport { getTransitionName } from '../_util/motion';\n// CSSINJS\nimport PreviewGroup, { icons } from './PreviewGroup';\nimport useStyle from './style';\nvar Image = function Image(_a) {\n  var customizePrefixCls = _a.prefixCls,\n    preview = _a.preview,\n    rootClassName = _a.rootClassName,\n    otherProps = __rest(_a, [\"prefixCls\", \"preview\", \"rootClassName\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    _React$useContext$loc = _React$useContext.locale,\n    contextLocale = _React$useContext$loc === void 0 ? defaultLocale : _React$useContext$loc,\n    getContextPopupContainer = _React$useContext.getPopupContainer;\n  var prefixCls = getPrefixCls('image', customizePrefixCls);\n  var rootPrefixCls = getPrefixCls();\n  var imageLocale = contextLocale.Image || defaultLocale.Image;\n  // Style\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  var mergedRootClassName = classNames(rootClassName, hashId);\n  var mergedPreview = React.useMemo(function () {\n    if (preview === false) {\n      return preview;\n    }\n    var _preview = typeof preview === 'object' ? preview : {};\n    var getContainer = _preview.getContainer,\n      restPreviewProps = __rest(_preview, [\"getContainer\"]);\n    return Object.assign(Object.assign({\n      mask: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-mask-info\")\n      }, /*#__PURE__*/React.createElement(EyeOutlined, null), imageLocale === null || imageLocale === void 0 ? void 0 : imageLocale.preview),\n      icons: icons\n    }, restPreviewProps), {\n      getContainer: getContainer || getContextPopupContainer,\n      transitionName: getTransitionName(rootPrefixCls, 'zoom', _preview.transitionName),\n      maskTransitionName: getTransitionName(rootPrefixCls, 'fade', _preview.maskTransitionName)\n    });\n  }, [preview, imageLocale]);\n  return wrapSSR( /*#__PURE__*/React.createElement(RcImage, Object.assign({\n    prefixCls: \"\".concat(prefixCls),\n    preview: mergedPreview,\n    rootClassName: mergedRootClassName\n  }, otherProps)));\n};\nImage.PreviewGroup = PreviewGroup;\nif (process.env.NODE_ENV !== 'production') {\n  Image.displayName = 'Image';\n}\nexport default Image;","map":null,"metadata":{},"sourceType":"module"}