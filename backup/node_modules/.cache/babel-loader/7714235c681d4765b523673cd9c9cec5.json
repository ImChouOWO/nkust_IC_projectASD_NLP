{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusOutline, resetComponent } from '../../style';\n// ============================== Motion ==============================\nvar antCheckboxEffect = new Keyframes('antCheckboxEffect', {\n  '0%': {\n    transform: 'scale(1)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(1.6)',\n    opacity: 0\n  }\n});\n// ============================== Styles ==============================\nexport var genCheckboxStyle = function genCheckboxStyle(token) {\n  var _Object$assign, _Object$assign2, _ref2, _$concat$concat, _ref4, _$concat2, _$concat$con2, _ref5, _$concat3, _ref6;\n  var checkboxCls = token.checkboxCls;\n  var wrapperCls = \"\".concat(checkboxCls, \"-wrapper\");\n  return [(_ref2 = {}, _defineProperty(_ref2, \"\".concat(checkboxCls, \"-group\"), Object.assign(Object.assign({}, resetComponent(token)), {\n    display: 'inline-flex'\n  })), _defineProperty(_ref2, wrapperCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    display: 'inline-flex',\n    alignItems: 'baseline',\n    cursor: 'pointer',\n    // Fix checkbox & radio in flex align #30260\n    '&:after': {\n      display: 'inline-block',\n      width: 0,\n      overflow: 'hidden',\n      content: \"'\\\\a0'\"\n    }\n  }, _defineProperty(_Object$assign, \"& + \".concat(wrapperCls), {\n    marginInlineStart: token.marginXS\n  }), _defineProperty(_Object$assign, \"&\".concat(wrapperCls, \"-in-form-item\"), {\n    'input[type=\"checkbox\"]': {\n      width: 14,\n      height: 14 // FIXME: magic\n    }\n  }), _Object$assign))), _defineProperty(_ref2, checkboxCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign2 = {\n    top: '0.2em',\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    lineHeight: 1,\n    cursor: 'pointer'\n  }, _defineProperty(_Object$assign2, \"\".concat(checkboxCls, \"-input\"), _defineProperty({\n    position: 'absolute',\n    inset: 0,\n    zIndex: 1,\n    width: '100%',\n    height: '100%',\n    cursor: 'pointer',\n    opacity: 0\n  }, \"&:focus-visible + \".concat(checkboxCls, \"-inner\"), Object.assign({}, genFocusOutline(token)))), _defineProperty(_Object$assign2, \"\".concat(checkboxCls, \"-inner\"), {\n    boxSizing: 'border-box',\n    position: 'relative',\n    top: 0,\n    insetInlineStart: 0,\n    display: 'block',\n    width: token.checkboxSize,\n    height: token.checkboxSize,\n    direction: 'ltr',\n    backgroundColor: token.colorBgContainer,\n    border: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorBorder),\n    borderRadius: token.borderRadiusSM,\n    borderCollapse: 'separate',\n    transition: \"all \".concat(token.motionDurationSlow),\n    '&:after': {\n      boxSizing: 'border-box',\n      position: 'absolute',\n      top: '50%',\n      insetInlineStart: '21.5%',\n      display: 'table',\n      width: token.checkboxSize / 14 * 5,\n      height: token.checkboxSize / 14 * 8,\n      border: \"\".concat(token.lineWidthBold, \"px solid \").concat(token.colorWhite),\n      borderTop: 0,\n      borderInlineStart: 0,\n      transform: 'rotate(45deg) scale(0) translate(-50%,-50%)',\n      opacity: 0,\n      content: '\"\"',\n      transition: \"all \".concat(token.motionDurationFast, \" \").concat(token.motionEaseInBack, \", opacity \").concat(token.motionDurationFast)\n    }\n  }), _defineProperty(_Object$assign2, '& + span', {\n    paddingInlineStart: token.paddingXS,\n    paddingInlineEnd: token.paddingXS\n  }), _Object$assign2))), _ref2), // ================= Indeterminate =================\n  _defineProperty({}, checkboxCls, {\n    '&-indeterminate': _defineProperty({}, \"\".concat(checkboxCls, \"-inner\"), {\n      '&:after': {\n        top: '50%',\n        insetInlineStart: '50%',\n        width: token.fontSizeLG / 2,\n        height: token.fontSizeLG / 2,\n        backgroundColor: token.colorPrimary,\n        border: 0,\n        transform: 'translate(-50%, -50%) scale(1)',\n        opacity: 1,\n        content: '\"\"'\n      }\n    })\n  }), (_ref4 = {}, _defineProperty(_ref4, \"\".concat(wrapperCls, \":hover \").concat(checkboxCls, \":after\"), {\n    visibility: 'visible'\n  }), _defineProperty(_ref4, \"\\n        \".concat(wrapperCls, \":not(\").concat(wrapperCls, \"-disabled),\\n        \").concat(checkboxCls, \":not(\").concat(checkboxCls, \"-disabled)\\n      \"), _defineProperty({}, \"&:hover \".concat(checkboxCls, \"-inner\"), {\n    borderColor: token.colorPrimary\n  })), _defineProperty(_ref4, \"\".concat(wrapperCls, \":not(\").concat(wrapperCls, \"-disabled)\"), (_$concat$concat = {}, _defineProperty(_$concat$concat, \"&:hover \".concat(checkboxCls, \"-checked:not(\").concat(checkboxCls, \"-disabled) \").concat(checkboxCls, \"-inner\"), {\n    backgroundColor: token.colorPrimaryHover,\n    borderColor: 'transparent'\n  }), _defineProperty(_$concat$concat, \"&:hover \".concat(checkboxCls, \"-checked:not(\").concat(checkboxCls, \"-disabled):after\"), {\n    borderColor: token.colorPrimaryHover\n  }), _$concat$concat)), _ref4), (_ref5 = {}, _defineProperty(_ref5, \"\".concat(checkboxCls, \"-checked\"), (_$concat2 = {}, _defineProperty(_$concat2, \"\".concat(checkboxCls, \"-inner\"), {\n    backgroundColor: token.colorPrimary,\n    borderColor: token.colorPrimary,\n    '&:after': {\n      opacity: 1,\n      transform: 'rotate(45deg) scale(1) translate(-50%,-50%)',\n      transition: \"all \".concat(token.motionDurationMid, \" \").concat(token.motionEaseOutBack, \" \").concat(token.motionDurationFast)\n    }\n  }), _defineProperty(_$concat2, '&:after', {\n    position: 'absolute',\n    top: 0,\n    insetInlineStart: 0,\n    width: '100%',\n    height: '100%',\n    borderRadius: token.borderRadiusSM,\n    visibility: 'hidden',\n    border: \"\".concat(token.lineWidthBold, \"px solid \").concat(token.colorPrimary),\n    animationName: antCheckboxEffect,\n    animationDuration: token.motionDurationSlow,\n    animationTimingFunction: 'ease-in-out',\n    animationFillMode: 'backwards',\n    content: '\"\"',\n    transition: \"all \".concat(token.motionDurationSlow)\n  }), _$concat2)), _defineProperty(_ref5, \"\\n        \".concat(wrapperCls, \"-checked:not(\").concat(wrapperCls, \"-disabled),\\n        \").concat(checkboxCls, \"-checked:not(\").concat(checkboxCls, \"-disabled)\\n      \"), (_$concat$con2 = {}, _defineProperty(_$concat$con2, \"&:hover \".concat(checkboxCls, \"-inner\"), {\n    backgroundColor: token.colorPrimaryHover,\n    borderColor: 'transparent'\n  }), _defineProperty(_$concat$con2, \"&:hover \".concat(checkboxCls, \":after\"), {\n    borderColor: token.colorPrimaryHover\n  }), _$concat$con2)), _ref5), (_ref6 = {}, _defineProperty(_ref6, \"\".concat(wrapperCls, \"-disabled\"), {\n    cursor: 'not-allowed'\n  }), _defineProperty(_ref6, \"\".concat(checkboxCls, \"-disabled\"), (_$concat3 = {}, _defineProperty(_$concat3, \"&, \".concat(checkboxCls, \"-input\"), {\n    cursor: 'not-allowed',\n    // Disabled for native input to enable Tooltip event handler\n    // ref: https://github.com/ant-design/ant-design/issues/39822#issuecomment-1365075901\n    pointerEvents: 'none'\n  }), _defineProperty(_$concat3, \"\".concat(checkboxCls, \"-inner\"), {\n    background: token.colorBgContainerDisabled,\n    borderColor: token.colorBorder,\n    '&:after': {\n      borderColor: token.colorTextDisabled\n    }\n  }), _defineProperty(_$concat3, '&:after', {\n    display: 'none'\n  }), _defineProperty(_$concat3, '& + span', {\n    color: token.colorTextDisabled\n  }), _defineProperty(_$concat3, \"&\".concat(checkboxCls, \"-indeterminate \").concat(checkboxCls, \"-inner::after\"), {\n    background: token.colorTextDisabled\n  }), _$concat3)), _ref6)];\n};\n// ============================== Export ==============================\nexport function getStyle(prefixCls, token) {\n  var checkboxToken = mergeToken(token, {\n    checkboxCls: \".\".concat(prefixCls),\n    checkboxSize: token.controlInteractiveSize\n  });\n  return [genCheckboxStyle(checkboxToken)];\n}\nexport default genComponentStyleHook('Checkbox', function (token, _ref) {\n  var prefixCls = _ref.prefixCls;\n  return [getStyle(prefixCls, token)];\n});","map":null,"metadata":{},"sourceType":"module"}