{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport VerticalAlignTopOutlined from \"@ant-design/icons/es/icons/VerticalAlignTopOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport React, { memo, useContext, useEffect, useRef, useState } from 'react';\nimport FloatButton, { floatButtonPrefixCls } from './FloatButton';\nimport { ConfigContext } from '../config-provider';\nimport getScroll from '../_util/getScroll';\nimport scrollTo from '../_util/scrollTo';\nimport throttleByAnimationFrame from '../_util/throttleByAnimationFrame';\nimport FloatButtonGroupContext from './context';\nimport useStyle from './style';\nvar BackTop = function BackTop(props) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'default' : _props$type,\n    _props$shape = props.shape,\n    shape = _props$shape === void 0 ? 'circle' : _props$shape,\n    _props$visibilityHeig = props.visibilityHeight,\n    visibilityHeight = _props$visibilityHeig === void 0 ? 400 : _props$visibilityHeig,\n    _props$icon = props.icon,\n    icon = _props$icon === void 0 ? /*#__PURE__*/React.createElement(VerticalAlignTopOutlined, null) : _props$icon,\n    target = props.target,\n    onClick = props.onClick,\n    _props$duration = props.duration,\n    duration = _props$duration === void 0 ? 450 : _props$duration,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"type\", \"shape\", \"visibilityHeight\", \"icon\", \"target\", \"onClick\", \"duration\"]);\n  var _useState = useState(visibilityHeight === 0),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  var ref = useRef(null);\n  var getDefaultTarget = function getDefaultTarget() {\n    return ref.current && ref.current.ownerDocument ? ref.current.ownerDocument : window;\n  };\n  var handleScroll = throttleByAnimationFrame(function (e) {\n    var scrollTop = getScroll(e.target, true);\n    setVisible(scrollTop >= visibilityHeight);\n  });\n  useEffect(function () {\n    var getTarget = target || getDefaultTarget;\n    var container = getTarget();\n    handleScroll({\n      target: container\n    });\n    container === null || container === void 0 ? void 0 : container.addEventListener('scroll', handleScroll);\n    return function () {\n      handleScroll.cancel();\n      container === null || container === void 0 ? void 0 : container.removeEventListener('scroll', handleScroll);\n    };\n  }, [target]);\n  var scrollToTop = function scrollToTop(e) {\n    scrollTo(0, {\n      getContainer: target || getDefaultTarget,\n      duration: duration\n    });\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  var _useContext = useContext(ConfigContext),\n    getPrefixCls = _useContext.getPrefixCls;\n  var prefixCls = getPrefixCls(floatButtonPrefixCls, customizePrefixCls);\n  var rootPrefixCls = getPrefixCls();\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 1),\n    wrapSSR = _useStyle2[0];\n  var groupShape = useContext(FloatButtonGroupContext);\n  var mergeShape = groupShape || shape;\n  var contentProps = Object.assign({\n    prefixCls: prefixCls,\n    icon: icon,\n    type: type,\n    shape: mergeShape\n  }, restProps);\n  return wrapSSR( /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    motionName: \"\".concat(rootPrefixCls, \"-fade\")\n  }, function (_ref) {\n    var motionClassName = _ref.className;\n    return /*#__PURE__*/React.createElement(FloatButton, Object.assign({\n      ref: ref\n    }, contentProps, {\n      onClick: scrollToTop,\n      className: classNames(className, motionClassName)\n    }));\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  BackTop.displayName = 'BackTop';\n}\nexport default /*#__PURE__*/memo(BackTop);","map":null,"metadata":{},"sourceType":"module"}