{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n// deps-lint-skip-all\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nvar genMessageStyle = function genMessageStyle(token) {\n  var _Object$assign, _$concat;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls,\n    boxShadow = token.boxShadow,\n    colorText = token.colorText,\n    colorBgElevated = token.colorBgElevated,\n    colorSuccess = token.colorSuccess,\n    colorError = token.colorError,\n    colorWarning = token.colorWarning,\n    colorInfo = token.colorInfo,\n    fontSizeLG = token.fontSizeLG,\n    motionEaseInOutCirc = token.motionEaseInOutCirc,\n    motionDurationSlow = token.motionDurationSlow,\n    marginXS = token.marginXS,\n    paddingXS = token.paddingXS,\n    borderRadiusLG = token.borderRadiusLG,\n    zIndexPopup = token.zIndexPopup,\n    messageNoticeContentPadding = token.messageNoticeContentPadding;\n  var messageMoveIn = new Keyframes('MessageMoveIn', {\n    '0%': {\n      padding: 0,\n      transform: 'translateY(-100%)',\n      opacity: 0\n    },\n    '100%': {\n      padding: paddingXS,\n      transform: 'translateY(0)',\n      opacity: 1\n    }\n  });\n  var messageMoveOut = new Keyframes('MessageMoveOut', {\n    '0%': {\n      maxHeight: token.height,\n      padding: paddingXS,\n      opacity: 1\n    },\n    '100%': {\n      maxHeight: 0,\n      padding: 0,\n      opacity: 0\n    }\n  });\n  return [// ============================ Holder ============================\n  _defineProperty({}, componentCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    color: colorText,\n    position: 'fixed',\n    top: marginXS,\n    width: '100%',\n    pointerEvents: 'none',\n    zIndex: zIndexPopup\n  }, _defineProperty(_Object$assign, \"\".concat(componentCls, \"-move-up\"), {\n    animationFillMode: 'forwards'\n  }), _defineProperty(_Object$assign, \"\\n        \".concat(componentCls, \"-move-up-appear,\\n        \").concat(componentCls, \"-move-up-enter\\n      \"), {\n    animationName: messageMoveIn,\n    animationDuration: motionDurationSlow,\n    animationPlayState: 'paused',\n    animationTimingFunction: motionEaseInOutCirc\n  }), _defineProperty(_Object$assign, \"\\n        \".concat(componentCls, \"-move-up-appear\").concat(componentCls, \"-move-up-appear-active,\\n        \").concat(componentCls, \"-move-up-enter\").concat(componentCls, \"-move-up-enter-active\\n      \"), {\n    animationPlayState: 'running'\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-move-up-leave\"), {\n    animationName: messageMoveOut,\n    animationDuration: motionDurationSlow,\n    animationPlayState: 'paused',\n    animationTimingFunction: motionEaseInOutCirc\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-move-up-leave\").concat(componentCls, \"-move-up-leave-active\"), {\n    animationPlayState: 'running'\n  }), _defineProperty(_Object$assign, '&-rtl', {\n    direction: 'rtl',\n    span: {\n      direction: 'rtl'\n    }\n  }), _Object$assign))), // ============================ Notice ============================\n  _defineProperty({}, \"\".concat(componentCls, \"-notice\"), (_$concat = {\n    padding: paddingXS,\n    textAlign: 'center'\n  }, _defineProperty(_$concat, \"\".concat(componentCls, \"-custom-content > \").concat(iconCls), {\n    verticalAlign: 'text-bottom',\n    marginInlineEnd: marginXS,\n    fontSize: fontSizeLG\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-notice-content\"), {\n    display: 'inline-block',\n    padding: messageNoticeContentPadding,\n    background: colorBgElevated,\n    borderRadius: borderRadiusLG,\n    boxShadow: boxShadow,\n    pointerEvents: 'all'\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-success > \").concat(iconCls), {\n    color: colorSuccess\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-error > \").concat(iconCls), {\n    color: colorError\n  }), _defineProperty(_$concat, \"\".concat(componentCls, \"-warning > \").concat(iconCls), {\n    color: colorWarning\n  }), _defineProperty(_$concat, \"\\n        \".concat(componentCls, \"-info > \").concat(iconCls, \",\\n        \").concat(componentCls, \"-loading > \").concat(iconCls), {\n    color: colorInfo\n  }), _$concat)), // ============================= Pure =============================\n  _defineProperty({}, \"\".concat(componentCls, \"-notice-pure-panel\"), {\n    padding: 0,\n    textAlign: 'start'\n  })];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Message', function (token) {\n  // Gen-style functions here\n  var combinedToken = mergeToken(token, {\n    messageNoticeContentPadding: \"\".concat((token.controlHeightLG - token.fontSize * token.lineHeight) / 2, \"px \").concat(token.paddingSM, \"px\")\n  });\n  return [genMessageStyle(combinedToken)];\n}, function (token) {\n  return {\n    height: 150,\n    zIndexPopup: token.zIndexPopupBase + 10\n  };\n});","map":null,"metadata":{},"sourceType":"module"}