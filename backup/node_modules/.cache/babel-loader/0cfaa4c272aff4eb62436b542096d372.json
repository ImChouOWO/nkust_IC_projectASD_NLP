{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { presetPrimaryColors } from '@ant-design/colors';\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport { getSize, getSuccessPercent, validProgress } from './utils';\n/**\n * @example\n *   {\n *     \"0%\": \"#afc163\",\n *     \"75%\": \"#009900\",\n *     \"50%\": \"green\", // ====> '#afc163 0%, #66FF00 25%, #00CC00 50%, #009900 75%, #ffffff 100%'\n *     \"25%\": \"#66FF00\",\n *     \"100%\": \"#ffffff\"\n *   }\n */\nexport var sortGradient = function sortGradient(gradients) {\n  var tempArr = [];\n  Object.keys(gradients).forEach(function (key) {\n    var formattedKey = parseFloat(key.replace(/%/g, ''));\n    if (!isNaN(formattedKey)) {\n      tempArr.push({\n        key: formattedKey,\n        value: gradients[key]\n      });\n    }\n  });\n  tempArr = tempArr.sort(function (a, b) {\n    return a.key - b.key;\n  });\n  return tempArr.map(function (_ref) {\n    var key = _ref.key,\n      value = _ref.value;\n    return \"\".concat(value, \" \").concat(key, \"%\");\n  }).join(', ');\n};\n/**\n * Then this man came to realize the truth: Besides six pence, there is the moon. Besides bread and\n * butter, there is the bug. And... Besides women, there is the code.\n *\n * @example\n *   {\n *     \"0%\": \"#afc163\",\n *     \"25%\": \"#66FF00\",\n *     \"50%\": \"#00CC00\", // ====>  linear-gradient(to right, #afc163 0%, #66FF00 25%,\n *     \"75%\": \"#009900\", //        #00CC00 50%, #009900 75%, #ffffff 100%)\n *     \"100%\": \"#ffffff\"\n *   }\n */\nexport var handleGradient = function handleGradient(strokeColor, directionConfig) {\n  var _strokeColor$from = strokeColor.from,\n    from = _strokeColor$from === void 0 ? presetPrimaryColors.blue : _strokeColor$from,\n    _strokeColor$to = strokeColor.to,\n    to = _strokeColor$to === void 0 ? presetPrimaryColors.blue : _strokeColor$to,\n    _strokeColor$directio = strokeColor.direction,\n    direction = _strokeColor$directio === void 0 ? directionConfig === 'rtl' ? 'to left' : 'to right' : _strokeColor$directio,\n    rest = __rest(strokeColor, [\"from\", \"to\", \"direction\"]);\n  if (Object.keys(rest).length !== 0) {\n    var sortedGradients = sortGradient(rest);\n    return {\n      backgroundImage: \"linear-gradient(\".concat(direction, \", \").concat(sortedGradients, \")\")\n    };\n  }\n  return {\n    backgroundImage: \"linear-gradient(\".concat(direction, \", \").concat(from, \", \").concat(to, \")\")\n  };\n};\nvar Line = function Line(props) {\n  var prefixCls = props.prefixCls,\n    directionConfig = props.direction,\n    percent = props.percent,\n    size = props.size,\n    strokeWidth = props.strokeWidth,\n    strokeColor = props.strokeColor,\n    _props$strokeLinecap = props.strokeLinecap,\n    strokeLinecap = _props$strokeLinecap === void 0 ? 'round' : _props$strokeLinecap,\n    children = props.children,\n    _props$trailColor = props.trailColor,\n    trailColor = _props$trailColor === void 0 ? null : _props$trailColor,\n    success = props.success;\n  var backgroundProps = strokeColor && typeof strokeColor !== 'string' ? handleGradient(strokeColor, directionConfig) : {\n    backgroundColor: strokeColor\n  };\n  var borderRadius = strokeLinecap === 'square' || strokeLinecap === 'butt' ? 0 : undefined;\n  var trailStyle = {\n    backgroundColor: trailColor || undefined,\n    borderRadius: borderRadius\n  };\n  var mergedSize = size !== null && size !== void 0 ? size : [-1, strokeWidth || (size === 'small' ? 6 : 8)];\n  var _getSize = getSize(mergedSize, 'line', {\n      strokeWidth: strokeWidth\n    }),\n    _getSize2 = _slicedToArray(_getSize, 2),\n    width = _getSize2[0],\n    height = _getSize2[1];\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('strokeWidth' in props), 'Progress', '`strokeWidth` is deprecated. Please use `size` instead.') : void 0;\n  }\n  var percentStyle = Object.assign({\n    width: \"\".concat(validProgress(percent), \"%\"),\n    height: height,\n    borderRadius: borderRadius\n  }, backgroundProps);\n  var successPercent = getSuccessPercent(props);\n  var successPercentStyle = {\n    width: \"\".concat(validProgress(successPercent), \"%\"),\n    height: height,\n    borderRadius: borderRadius,\n    backgroundColor: success === null || success === void 0 ? void 0 : success.strokeColor\n  };\n  var outerStyle = {\n    width: width < 0 ? '100%' : width,\n    height: height\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-outer\"),\n    style: outerStyle\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-inner\"),\n    style: trailStyle\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-bg\"),\n    style: percentStyle\n  }), successPercent !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-success-bg\"),\n    style: successPercentStyle\n  }) : null)), children);\n};\nexport default Line;","map":null,"metadata":{},"sourceType":"module"}