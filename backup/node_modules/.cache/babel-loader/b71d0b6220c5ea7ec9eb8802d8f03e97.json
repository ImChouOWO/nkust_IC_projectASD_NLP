{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nexport { operationUnit } from './operationUnit';\nexport { genPresetColor } from './presetColor';\nexport { roundedArrow } from './roundedArrow';\nexport var textEllipsis = {\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis'\n};\nexport var resetComponent = function resetComponent(token) {\n  return {\n    boxSizing: 'border-box',\n    margin: 0,\n    padding: 0,\n    color: token.colorText,\n    fontSize: token.fontSize,\n    // font-variant: @font-variant-base;\n    lineHeight: token.lineHeight,\n    listStyle: 'none',\n    // font-feature-settings: @font-feature-settings-base;\n    fontFamily: token.fontFamily\n  };\n};\nexport var resetIcon = function resetIcon() {\n  return {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'inherit',\n    fontStyle: 'normal',\n    lineHeight: 0,\n    textAlign: 'center',\n    textTransform: 'none',\n    // for SVG icon, see https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n    verticalAlign: '-0.125em',\n    textRendering: 'optimizeLegibility',\n    '-webkit-font-smoothing': 'antialiased',\n    '-moz-osx-font-smoothing': 'grayscale',\n    '> *': {\n      lineHeight: 1\n    },\n    svg: {\n      display: 'inline-block'\n    }\n  };\n};\nexport var clearFix = function clearFix() {\n  return {\n    // https://github.com/ant-design/ant-design/issues/21301#issuecomment-583955229\n    '&::before': {\n      display: 'table',\n      content: '\"\"'\n    },\n    '&::after': {\n      // https://github.com/ant-design/ant-design/issues/21864\n      display: 'table',\n      clear: 'both',\n      content: '\"\"'\n    }\n  };\n};\nexport var genLinkStyle = function genLinkStyle(token) {\n  var _a;\n  return {\n    a: (_a = {\n      color: token.colorLink,\n      textDecoration: token.linkDecoration,\n      backgroundColor: 'transparent',\n      outline: 'none',\n      cursor: 'pointer',\n      transition: \"color \".concat(token.motionDurationSlow),\n      '-webkit-text-decoration-skip': 'objects',\n      '&:hover': {\n        color: token.colorLinkHover\n      },\n      '&:active': {\n        color: token.colorLinkActive\n      }\n    }, _defineProperty(_a, \"&:active,\\n  &:hover\", {\n      textDecoration: token.linkHoverDecoration,\n      outline: 0\n    }), _defineProperty(_a, '&:focus', {\n      textDecoration: token.linkFocusDecoration,\n      outline: 0\n    }), _defineProperty(_a, '&[disabled]', {\n      color: token.colorTextDisabled,\n      cursor: 'not-allowed'\n    }), _a)\n  };\n};\nexport var genCommonStyle = function genCommonStyle(token, componentPrefixCls) {\n  var fontFamily = token.fontFamily,\n    fontSize = token.fontSize;\n  var rootPrefixSelector = \"[class^=\\\"\".concat(componentPrefixCls, \"\\\"], [class*=\\\" \").concat(componentPrefixCls, \"\\\"]\");\n  return _defineProperty({}, rootPrefixSelector, _defineProperty({\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    boxSizing: 'border-box',\n    '&::before, &::after': {\n      boxSizing: 'border-box'\n    }\n  }, rootPrefixSelector, {\n    boxSizing: 'border-box',\n    '&::before, &::after': {\n      boxSizing: 'border-box'\n    }\n  }));\n};\nexport var genFocusOutline = function genFocusOutline(token) {\n  return {\n    outline: \"\".concat(token.lineWidthFocus, \"px solid \").concat(token.colorPrimaryBorder),\n    outlineOffset: 1,\n    transition: 'outline-offset 0s, outline 0s'\n  };\n};\nexport var genFocusStyle = function genFocusStyle(token) {\n  return {\n    '&:focus-visible': Object.assign({}, genFocusOutline(token))\n  };\n};","map":null,"metadata":{},"sourceType":"module"}