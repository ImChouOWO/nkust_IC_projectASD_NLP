{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { clearFix, resetComponent, textEllipsis } from '../../style';\n// ============================== Styles ==============================\n// ============================== Head ==============================\nvar genCardHeadStyle = function genCardHeadStyle(token) {\n  var antCls = token.antCls,\n    componentCls = token.componentCls,\n    cardHeadHeight = token.cardHeadHeight,\n    cardPaddingBase = token.cardPaddingBase,\n    cardHeadTabsMarginBottom = token.cardHeadTabsMarginBottom;\n  return Object.assign(Object.assign({\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    minHeight: cardHeadHeight,\n    marginBottom: -1,\n    padding: \"0 \".concat(cardPaddingBase, \"px\"),\n    color: token.colorTextHeading,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.fontSizeLG,\n    background: 'transparent',\n    borderBottom: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorBorderSecondary),\n    borderRadius: \"\".concat(token.borderRadiusLG, \"px \").concat(token.borderRadiusLG, \"px 0 0\")\n  }, clearFix()), _defineProperty({\n    '&-wrapper': {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    '&-title': Object.assign(Object.assign({\n      display: 'inline-block',\n      flex: 1\n    }, textEllipsis), _defineProperty({}, \"\\n          > \".concat(componentCls, \"-typography,\\n          > \").concat(componentCls, \"-typography-edit-content\\n        \"), {\n      insetInlineStart: 0,\n      marginTop: 0,\n      marginBottom: 0\n    }))\n  }, \"\".concat(antCls, \"-tabs-top\"), {\n    clear: 'both',\n    marginBottom: cardHeadTabsMarginBottom,\n    color: token.colorText,\n    fontWeight: 'normal',\n    fontSize: token.fontSize,\n    '&-bar': {\n      borderBottom: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorBorderSecondary)\n    }\n  }));\n};\n// ============================== Grid ==============================\nvar genCardGridStyle = function genCardGridStyle(token) {\n  var cardPaddingBase = token.cardPaddingBase,\n    colorBorderSecondary = token.colorBorderSecondary,\n    cardShadow = token.cardShadow,\n    lineWidth = token.lineWidth;\n  return {\n    width: '33.33%',\n    padding: cardPaddingBase,\n    border: 0,\n    borderRadius: 0,\n    boxShadow: \"\\n      \".concat(lineWidth, \"px 0 0 0 \").concat(colorBorderSecondary, \",\\n      0 \").concat(lineWidth, \"px 0 0 \").concat(colorBorderSecondary, \",\\n      \").concat(lineWidth, \"px \").concat(lineWidth, \"px 0 0 \").concat(colorBorderSecondary, \",\\n      \").concat(lineWidth, \"px 0 0 0 \").concat(colorBorderSecondary, \" inset,\\n      0 \").concat(lineWidth, \"px 0 0 \").concat(colorBorderSecondary, \" inset;\\n    \"),\n    transition: \"all \".concat(token.motionDurationMid),\n    '&-hoverable:hover': {\n      position: 'relative',\n      zIndex: 1,\n      boxShadow: cardShadow\n    }\n  };\n};\n// ============================== Actions ==============================\nvar genCardActionsStyle = function genCardActionsStyle(token) {\n  var _span;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls,\n    cardActionsLiMargin = token.cardActionsLiMargin,\n    cardActionsIconSize = token.cardActionsIconSize,\n    colorBorderSecondary = token.colorBorderSecondary;\n  return Object.assign(Object.assign({\n    margin: 0,\n    padding: 0,\n    listStyle: 'none',\n    background: token.colorBgContainer,\n    borderTop: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(colorBorderSecondary),\n    display: 'flex',\n    borderRadius: \"0 0 \".concat(token.borderRadiusLG, \"px \").concat(token.borderRadiusLG, \"px \")\n  }, clearFix()), {\n    '& > li': {\n      margin: cardActionsLiMargin,\n      color: token.colorTextDescription,\n      textAlign: 'center',\n      '> span': (_span = {\n        position: 'relative',\n        display: 'block',\n        minWidth: token.cardActionsIconSize * 2,\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        cursor: 'pointer',\n        '&:hover': {\n          color: token.colorPrimary,\n          transition: \"color \".concat(token.motionDurationMid)\n        }\n      }, _defineProperty(_span, \"a:not(\".concat(componentCls, \"-btn), > \").concat(iconCls), {\n        display: 'inline-block',\n        width: '100%',\n        color: token.colorTextDescription,\n        lineHeight: \"\".concat(token.fontSize * token.lineHeight, \"px\"),\n        transition: \"color \".concat(token.motionDurationMid),\n        '&:hover': {\n          color: token.colorPrimary\n        }\n      }), _defineProperty(_span, \"> \".concat(iconCls), {\n        fontSize: cardActionsIconSize,\n        lineHeight: \"\".concat(cardActionsIconSize * token.lineHeight, \"px\")\n      }), _span),\n      '&:not(:last-child)': {\n        borderInlineEnd: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(colorBorderSecondary)\n      }\n    }\n  });\n};\n// ============================== Meta ==============================\nvar genCardMetaStyle = function genCardMetaStyle(token) {\n  return Object.assign(Object.assign({\n    margin: \"-\".concat(token.marginXXS, \"px 0\"),\n    display: 'flex'\n  }, clearFix()), {\n    '&-avatar': {\n      paddingInlineEnd: token.padding\n    },\n    '&-detail': {\n      overflow: 'hidden',\n      flex: 1,\n      '> div:not(:last-child)': {\n        marginBottom: token.marginXS\n      }\n    },\n    '&-title': Object.assign({\n      color: token.colorTextHeading,\n      fontWeight: token.fontWeightStrong,\n      fontSize: token.fontSizeLG\n    }, textEllipsis),\n    '&-description': {\n      color: token.colorTextDescription\n    }\n  });\n};\n// ============================== Inner ==============================\nvar genCardTypeInnerStyle = function genCardTypeInnerStyle(token) {\n  var _ref;\n  var componentCls = token.componentCls,\n    cardPaddingBase = token.cardPaddingBase,\n    colorFillAlter = token.colorFillAlter;\n  return _ref = {}, _defineProperty(_ref, \"\".concat(componentCls, \"-head\"), {\n    padding: \"0 \".concat(cardPaddingBase, \"px\"),\n    background: colorFillAlter,\n    '&-title': {\n      fontSize: token.fontSize\n    }\n  }), _defineProperty(_ref, \"\".concat(componentCls, \"-body\"), {\n    padding: \"\".concat(token.padding, \"px \").concat(cardPaddingBase, \"px\")\n  }), _ref;\n};\n// ============================== Loading ==============================\nvar genCardLoadingStyle = function genCardLoadingStyle(token) {\n  var componentCls = token.componentCls;\n  return _defineProperty({\n    overflow: 'hidden'\n  }, \"\".concat(componentCls, \"-body\"), {\n    userSelect: 'none'\n  });\n};\n// ============================== Basic ==============================\nvar genCardStyle = function genCardStyle(token) {\n  var _Object$assign3, _$concat2, _ref3;\n  var componentCls = token.componentCls,\n    cardShadow = token.cardShadow,\n    cardHeadPadding = token.cardHeadPadding,\n    colorBorderSecondary = token.colorBorderSecondary,\n    boxShadowTertiary = token.boxShadowTertiary,\n    cardPaddingBase = token.cardPaddingBase;\n  return _ref3 = {}, _defineProperty(_ref3, componentCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign3 = {\n    position: 'relative',\n    background: token.colorBgContainer,\n    borderRadius: token.borderRadiusLG\n  }, _defineProperty(_Object$assign3, \"&:not(\".concat(componentCls, \"-bordered)\"), {\n    boxShadow: boxShadowTertiary\n  }), _defineProperty(_Object$assign3, \"\".concat(componentCls, \"-head\"), genCardHeadStyle(token)), _defineProperty(_Object$assign3, \"\".concat(componentCls, \"-extra\"), {\n    // https://stackoverflow.com/a/22429853/3040605\n    marginInlineStart: 'auto',\n    color: '',\n    fontWeight: 'normal',\n    fontSize: token.fontSize\n  }), _defineProperty(_Object$assign3, \"\".concat(componentCls, \"-body\"), Object.assign({\n    padding: cardPaddingBase,\n    borderRadius: \" 0 0 \".concat(token.borderRadiusLG, \"px \").concat(token.borderRadiusLG, \"px\")\n  }, clearFix())), _defineProperty(_Object$assign3, \"\".concat(componentCls, \"-grid\"), genCardGridStyle(token)), _defineProperty(_Object$assign3, \"\".concat(componentCls, \"-cover\"), {\n    '> *': {\n      display: 'block',\n      width: '100%'\n    },\n    img: {\n      borderRadius: \"\".concat(token.borderRadiusLG, \"px \").concat(token.borderRadiusLG, \"px 0 0\")\n    }\n  }), _defineProperty(_Object$assign3, \"\".concat(componentCls, \"-actions\"), genCardActionsStyle(token)), _defineProperty(_Object$assign3, \"\".concat(componentCls, \"-meta\"), genCardMetaStyle(token)), _Object$assign3))), _defineProperty(_ref3, \"\".concat(componentCls, \"-bordered\"), _defineProperty({\n    border: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(colorBorderSecondary)\n  }, \"\".concat(componentCls, \"-cover\"), {\n    marginTop: -1,\n    marginInlineStart: -1,\n    marginInlineEnd: -1\n  })), _defineProperty(_ref3, \"\".concat(componentCls, \"-hoverable\"), {\n    cursor: 'pointer',\n    transition: \"box-shadow \".concat(token.motionDurationMid, \", border-color \").concat(token.motionDurationMid),\n    '&:hover': {\n      borderColor: 'transparent',\n      boxShadow: cardShadow\n    }\n  }), _defineProperty(_ref3, \"\".concat(componentCls, \"-contain-grid\"), (_$concat2 = {}, _defineProperty(_$concat2, \"\".concat(componentCls, \"-body\"), {\n    display: 'flex',\n    flexWrap: 'wrap'\n  }), _defineProperty(_$concat2, \"&:not(\".concat(componentCls, \"-loading) \").concat(componentCls, \"-body\"), {\n    marginBlockStart: -token.lineWidth,\n    marginInlineStart: -token.lineWidth,\n    padding: 0\n  }), _$concat2)), _defineProperty(_ref3, \"\".concat(componentCls, \"-contain-tabs\"), _defineProperty({}, \"> \".concat(componentCls, \"-head\"), _defineProperty({}, \"\".concat(componentCls, \"-head-title, \").concat(componentCls, \"-extra\"), {\n    paddingTop: cardHeadPadding\n  }))), _defineProperty(_ref3, \"\".concat(componentCls, \"-type-inner\"), genCardTypeInnerStyle(token)), _defineProperty(_ref3, \"\".concat(componentCls, \"-loading\"), genCardLoadingStyle(token)), _defineProperty(_ref3, \"\".concat(componentCls, \"-rtl\"), {\n    direction: 'rtl'\n  }), _ref3;\n};\n// ============================== Size ==============================\nvar genCardSizeStyle = function genCardSizeStyle(token) {\n  var _$concat7, _ref4;\n  var componentCls = token.componentCls,\n    cardPaddingSM = token.cardPaddingSM,\n    cardHeadHeightSM = token.cardHeadHeightSM;\n  return _ref4 = {}, _defineProperty(_ref4, \"\".concat(componentCls, \"-small\"), (_$concat7 = {}, _defineProperty(_$concat7, \"> \".concat(componentCls, \"-head\"), _defineProperty({\n    minHeight: cardHeadHeightSM,\n    padding: \"0 \".concat(cardPaddingSM, \"px\"),\n    fontSize: token.fontSize\n  }, \"> \".concat(componentCls, \"-head-wrapper\"), _defineProperty({}, \"> \".concat(componentCls, \"-extra\"), {\n    fontSize: token.fontSize\n  }))), _defineProperty(_$concat7, \"> \".concat(componentCls, \"-body\"), {\n    padding: cardPaddingSM\n  }), _$concat7)), _defineProperty(_ref4, \"\".concat(componentCls, \"-small\").concat(componentCls, \"-contain-tabs\"), _defineProperty({}, \"> \".concat(componentCls, \"-head\"), _defineProperty({}, \"\".concat(componentCls, \"-head-title, \").concat(componentCls, \"-extra\"), {\n    minHeight: cardHeadHeightSM,\n    paddingTop: 0,\n    display: 'flex',\n    alignItems: 'center'\n  }))), _ref4;\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Card', function (token) {\n  var cardToken = mergeToken(token, {\n    cardShadow: token.boxShadowCard,\n    cardHeadHeight: token.fontSizeLG * token.lineHeightLG + token.padding * 2,\n    cardHeadHeightSM: token.fontSize * token.lineHeight + token.paddingXS * 2,\n    cardHeadPadding: token.padding,\n    cardPaddingBase: token.paddingLG,\n    cardHeadTabsMarginBottom: -token.padding - token.lineWidth,\n    cardActionsLiMargin: \"\".concat(token.paddingSM, \"px 0\"),\n    cardActionsIconSize: token.fontSize,\n    cardPaddingSM: 12 // Fixed padding.\n  });\n\n  return [\n  // Style\n  genCardStyle(cardToken),\n  // Size\n  genCardSizeStyle(cardToken)];\n});","map":null,"metadata":{},"sourceType":"module"}