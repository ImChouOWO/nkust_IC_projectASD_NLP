{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { presetPrimaryColors } from '@ant-design/colors';\nimport warning from '../_util/warning';\nexport function validProgress(progress) {\n  if (!progress || progress < 0) {\n    return 0;\n  }\n  if (progress > 100) {\n    return 100;\n  }\n  return progress;\n}\nexport function getSuccessPercent(_ref) {\n  var success = _ref.success,\n    successPercent = _ref.successPercent;\n  var percent = successPercent;\n  /** @deprecated Use `percent` instead */\n  if (success && 'progress' in success) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Progress', '`success.progress` is deprecated. Please use `success.percent` instead.') : void 0;\n    percent = success.progress;\n  }\n  if (success && 'percent' in success) {\n    percent = success.percent;\n  }\n  return percent;\n}\nexport var getPercentage = function getPercentage(_ref2) {\n  var percent = _ref2.percent,\n    success = _ref2.success,\n    successPercent = _ref2.successPercent;\n  var realSuccessPercent = validProgress(getSuccessPercent({\n    success: success,\n    successPercent: successPercent\n  }));\n  return [realSuccessPercent, validProgress(validProgress(percent) - realSuccessPercent)];\n};\nexport var getStrokeColor = function getStrokeColor(_ref3) {\n  var _ref3$success = _ref3.success,\n    success = _ref3$success === void 0 ? {} : _ref3$success,\n    strokeColor = _ref3.strokeColor;\n  var successColor = success.strokeColor;\n  return [successColor || presetPrimaryColors.green, strokeColor || null];\n};\nexport var getSize = function getSize(size, type, extra) {\n  var _a, _b, _c, _d;\n  var width = -1;\n  var height = -1;\n  if (type === 'step') {\n    var steps = extra.steps;\n    var strokeWidth = extra.strokeWidth;\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      width = size === 'small' ? 2 : 14;\n      height = strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 8;\n    } else if (typeof size === 'number') {\n      width = size;\n      height = size;\n    } else {\n      var _size = _slicedToArray(size, 2);\n      var _size$ = _size[0];\n      width = _size$ === void 0 ? 14 : _size$;\n      var _size$2 = _size[1];\n      height = _size$2 === void 0 ? 8 : _size$2;\n    }\n    width *= steps;\n  } else if (type === 'line') {\n    var _strokeWidth = extra === null || extra === void 0 ? void 0 : extra.strokeWidth;\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      height = _strokeWidth || (size === 'small' ? 6 : 8);\n    } else if (typeof size === 'number') {\n      width = size;\n      height = size;\n    } else {\n      var _size2 = _slicedToArray(size, 2);\n      var _size2$ = _size2[0];\n      width = _size2$ === void 0 ? -1 : _size2$;\n      var _size2$2 = _size2[1];\n      height = _size2$2 === void 0 ? 8 : _size2$2;\n    }\n  } else if (type === 'circle' || type === 'dashboard') {\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      var _ref4 = size === 'small' ? [60, 60] : [120, 120];\n      var _ref5 = _slicedToArray(_ref4, 2);\n      width = _ref5[0];\n      height = _ref5[1];\n    } else if (typeof size === 'number') {\n      width = size;\n      height = size;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Progress', 'Type \"circle\" and \"dashbord\" do not accept array as `size`, please use number or preset size instead.') : void 0;\n      }\n      width = (_b = (_a = size[0]) !== null && _a !== void 0 ? _a : size[1]) !== null && _b !== void 0 ? _b : 120;\n      height = (_d = (_c = size[0]) !== null && _c !== void 0 ? _c : size[1]) !== null && _d !== void 0 ? _d : 120;\n    }\n  }\n  return [width, height];\n};","map":null,"metadata":{},"sourceType":"module"}