{"ast":null,"code":"var t = function t(_t) {\n    return \"object\" == typeof _t && null != _t && 1 === _t.nodeType;\n  },\n  e = function e(t, _e) {\n    return (!_e || \"hidden\" !== t) && \"visible\" !== t && \"clip\" !== t;\n  },\n  n = function n(t, _n) {\n    if (t.clientHeight < t.scrollHeight || t.clientWidth < t.scrollWidth) {\n      var _l = getComputedStyle(t, null);\n      return e(_l.overflowY, _n) || e(_l.overflowX, _n) || function (t) {\n        var e = function (t) {\n          if (!t.ownerDocument || !t.ownerDocument.defaultView) return null;\n          try {\n            return t.ownerDocument.defaultView.frameElement;\n          } catch (t) {\n            return null;\n          }\n        }(t);\n        return !!e && (e.clientHeight < t.scrollHeight || e.clientWidth < t.scrollWidth);\n      }(t);\n    }\n    return !1;\n  },\n  l = function l(t, e, n, _l2, i, o, r, d) {\n    return o < t && r > e || o > t && r < e ? 0 : o <= t && d <= n || r >= e && d >= n ? o - t - _l2 : r > e && d < n || o < t && d > n ? r - e + i : 0;\n  },\n  i = function i(t) {\n    var e = t.parentElement;\n    return null == e ? t.getRootNode().host || null : e;\n  },\n  o = function o(e, _o2) {\n    var r, d, h, f;\n    if (\"undefined\" == typeof document) return [];\n    var u = _o2.scrollMode,\n      s = _o2.block,\n      c = _o2.inline,\n      a = _o2.boundary,\n      g = _o2.skipOverflowHiddenElements,\n      m = \"function\" == typeof a ? a : function (t) {\n        return t !== a;\n      };\n    if (!t(e)) throw new TypeError(\"Invalid target\");\n    var p = document.scrollingElement || document.documentElement,\n      w = [],\n      W = e;\n    for (; t(W) && m(W);) {\n      if (W = i(W), W === p) {\n        w.push(W);\n        break;\n      }\n      null != W && W === document.body && n(W) && !n(document.documentElement) || null != W && n(W, g) && w.push(W);\n    }\n    var H = null != (d = null == (r = window.visualViewport) ? void 0 : r.width) ? d : innerWidth,\n      b = null != (f = null == (h = window.visualViewport) ? void 0 : h.height) ? f : innerHeight,\n      _window = window,\n      v = _window.scrollX,\n      y = _window.scrollY,\n      _e$getBoundingClientR = e.getBoundingClientRect(),\n      E = _e$getBoundingClientR.height,\n      M = _e$getBoundingClientR.width,\n      x = _e$getBoundingClientR.top,\n      I = _e$getBoundingClientR.right,\n      C = _e$getBoundingClientR.bottom,\n      R = _e$getBoundingClientR.left,\n      T = \"start\" === s || \"nearest\" === s ? x : \"end\" === s ? C : x + E / 2,\n      V = \"center\" === c ? R + M / 2 : \"end\" === c ? I : R,\n      k = [];\n    for (var _t2 = 0; _t2 < w.length; _t2++) {\n      var _e2 = w[_t2],\n        _e$getBoundingClientR2 = _e2.getBoundingClientRect(),\n        _n2 = _e$getBoundingClientR2.height,\n        _i = _e$getBoundingClientR2.width,\n        _o = _e$getBoundingClientR2.top,\n        _r = _e$getBoundingClientR2.right,\n        _d = _e$getBoundingClientR2.bottom,\n        _h = _e$getBoundingClientR2.left;\n      if (\"if-needed\" === u && x >= 0 && R >= 0 && C <= b && I <= H && x >= _o && C <= _d && R >= _h && I <= _r) return k;\n      var _f = getComputedStyle(_e2),\n        _a = parseInt(_f.borderLeftWidth, 10),\n        _g = parseInt(_f.borderTopWidth, 10),\n        _m = parseInt(_f.borderRightWidth, 10),\n        _W = parseInt(_f.borderBottomWidth, 10),\n        B = 0,\n        D = 0,\n        L = \"offsetWidth\" in _e2 ? _e2.offsetWidth - _e2.clientWidth - _a - _m : 0,\n        S = \"offsetHeight\" in _e2 ? _e2.offsetHeight - _e2.clientHeight - _g - _W : 0,\n        X = \"offsetWidth\" in _e2 ? 0 === _e2.offsetWidth ? 0 : _i / _e2.offsetWidth : 0,\n        Y = \"offsetHeight\" in _e2 ? 0 === _e2.offsetHeight ? 0 : _n2 / _e2.offsetHeight : 0;\n      if (p === _e2) B = \"start\" === s ? T : \"end\" === s ? T - b : \"nearest\" === s ? l(y, y + b, b, _g, _W, y + T, y + T + E, E) : T - b / 2, D = \"start\" === c ? V : \"center\" === c ? V - H / 2 : \"end\" === c ? V - H : l(v, v + H, H, _a, _m, v + V, v + V + M, M), B = Math.max(0, B + y), D = Math.max(0, D + v);else {\n        B = \"start\" === s ? T - _o - _g : \"end\" === s ? T - _d + _W + S : \"nearest\" === s ? l(_o, _d, _n2, _g, _W + S, T, T + E, E) : T - (_o + _n2 / 2) + S / 2, D = \"start\" === c ? V - _h - _a : \"center\" === c ? V - (_h + _i / 2) + L / 2 : \"end\" === c ? V - _r + _m + L : l(_h, _r, _i, _a, _m + L, V, V + M, M);\n        var _t3 = _e2.scrollLeft,\n          _f2 = _e2.scrollTop;\n        B = Math.max(0, Math.min(_f2 + B / Y, _e2.scrollHeight - _n2 / Y + S)), D = Math.max(0, Math.min(_t3 + D / X, _e2.scrollWidth - _i / X + L)), T += _f2 - B, V += _t3 - D;\n      }\n      k.push({\n        el: _e2,\n        top: B,\n        left: D\n      });\n    }\n    return k;\n  };\nexport { o as compute };","map":null,"metadata":{},"sourceType":"module"}