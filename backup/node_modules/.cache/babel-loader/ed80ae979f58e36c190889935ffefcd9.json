{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport EyeInvisibleOutlined from \"@ant-design/icons/es/icons/EyeInvisibleOutlined\";\nimport EyeOutlined from \"@ant-design/icons/es/icons/EyeOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useRef, useState } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useRemovePasswordTimeout from './hooks/useRemovePasswordTimeout';\nimport Input from './Input';\nvar defaultIconRender = function defaultIconRender(visible) {\n  return visible ? /*#__PURE__*/React.createElement(EyeOutlined, null) : /*#__PURE__*/React.createElement(EyeInvisibleOutlined, null);\n};\nvar ActionMap = {\n  click: 'onClick',\n  hover: 'onMouseOver'\n};\nvar Password = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$visibilityTogg = props.visibilityToggle,\n    visibilityToggle = _props$visibilityTogg === void 0 ? true : _props$visibilityTogg;\n  var visibilityControlled = typeof visibilityToggle === 'object' && visibilityToggle.visible !== undefined;\n  var _useState = useState(function () {\n      return visibilityControlled ? visibilityToggle.visible : false;\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  var inputRef = useRef(null);\n  React.useEffect(function () {\n    if (visibilityControlled) {\n      setVisible(visibilityToggle.visible);\n    }\n  }, [visibilityControlled, visibilityToggle]);\n  // Remove Password value\n  var removePasswordTimeout = useRemovePasswordTimeout(inputRef);\n  var onVisibleChange = function onVisibleChange() {\n    var disabled = props.disabled;\n    if (disabled) {\n      return;\n    }\n    if (visible) {\n      removePasswordTimeout();\n    }\n    setVisible(function (prevState) {\n      var _a;\n      var newState = !prevState;\n      if (typeof visibilityToggle === 'object') {\n        (_a = visibilityToggle.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(visibilityToggle, newState);\n      }\n      return newState;\n    });\n  };\n  var getIcon = function getIcon(prefixCls) {\n    var _iconProps;\n    var _props$action = props.action,\n      action = _props$action === void 0 ? 'click' : _props$action,\n      _props$iconRender = props.iconRender,\n      iconRender = _props$iconRender === void 0 ? defaultIconRender : _props$iconRender;\n    var iconTrigger = ActionMap[action] || '';\n    var icon = iconRender(visible);\n    var iconProps = (_iconProps = {}, _defineProperty(_iconProps, iconTrigger, onVisibleChange), _defineProperty(_iconProps, \"className\", \"\".concat(prefixCls, \"-icon\")), _defineProperty(_iconProps, \"key\", 'passwordIcon'), _defineProperty(_iconProps, \"onMouseDown\", function onMouseDown(e) {\n      // Prevent focused state lost\n      // https://github.com/ant-design/ant-design/issues/15173\n      e.preventDefault();\n    }), _defineProperty(_iconProps, \"onMouseUp\", function onMouseUp(e) {\n      // Prevent caret position change\n      // https://github.com/ant-design/ant-design/issues/23524\n      e.preventDefault();\n    }), _iconProps);\n    return /*#__PURE__*/React.cloneElement( /*#__PURE__*/React.isValidElement(icon) ? icon : /*#__PURE__*/React.createElement(\"span\", null, icon), iconProps);\n  };\n  var className = props.className,\n    customizePrefixCls = props.prefixCls,\n    customizeInputPrefixCls = props.inputPrefixCls,\n    size = props.size,\n    restProps = __rest(props, [\"className\", \"prefixCls\", \"inputPrefixCls\", \"size\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var inputPrefixCls = getPrefixCls('input', customizeInputPrefixCls);\n  var prefixCls = getPrefixCls('input-password', customizePrefixCls);\n  var suffixIcon = visibilityToggle && getIcon(prefixCls);\n  var inputClassName = classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-\").concat(size), !!size));\n  var omittedProps = Object.assign(Object.assign({}, omit(restProps, ['suffix', 'iconRender', 'visibilityToggle'])), {\n    type: visible ? 'text' : 'password',\n    className: inputClassName,\n    prefixCls: inputPrefixCls,\n    suffix: suffixIcon\n  });\n  if (size) {\n    omittedProps.size = size;\n  }\n  return /*#__PURE__*/React.createElement(Input, Object.assign({\n    ref: composeRef(ref, inputRef)\n  }, omittedProps));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Password.displayName = 'Password';\n}\nexport default Password;","map":null,"metadata":{},"sourceType":"module"}