{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/pythonCode/projectASD/main/nkust_IC_projectASD_NLP/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { RawPurePanel as PopoverRawPurePanel } from '../popover/PurePanel';\nimport TourPanel from './panelRender';\nimport useStyle from './style';\nvar PurePanel = function PurePanel(props) {\n  var customizePrefixCls = props.prefixCls,\n    _props$current = props.current,\n    current = _props$current === void 0 ? 0 : _props$current,\n    _props$total = props.total,\n    total = _props$total === void 0 ? 6 : _props$total,\n    className = props.className,\n    style = props.style,\n    type = props.type,\n    restProps = __rest(props, [\"prefixCls\", \"current\", \"total\", \"className\", \"style\", \"type\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('tour', customizePrefixCls);\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  return wrapSSR( /*#__PURE__*/React.createElement(PopoverRawPurePanel, {\n    prefixCls: prefixCls,\n    hashId: hashId,\n    className: classNames(className, \"\".concat(prefixCls, \"-pure\"), type && \"\".concat(prefixCls, \"-\").concat(type)),\n    style: style\n  }, /*#__PURE__*/React.createElement(TourPanel, {\n    stepProps: Object.assign(Object.assign({}, restProps), {\n      prefixCls: prefixCls,\n      total: total\n    }),\n    current: current,\n    type: type\n  })));\n};\nexport default PurePanel;","map":null,"metadata":{},"sourceType":"module"}