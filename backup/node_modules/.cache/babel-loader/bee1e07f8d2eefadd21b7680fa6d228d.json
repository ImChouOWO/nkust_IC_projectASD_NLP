{"ast":null,"code":"import { useEffect, useRef } from 'react';\nexport default function useRemovePasswordTimeout(inputRef, triggerOnMount) {\n  var removePasswordTimeoutRef = useRef([]);\n  var removePasswordTimeout = function removePasswordTimeout() {\n    removePasswordTimeoutRef.current.push(setTimeout(function () {\n      var _a, _b, _c, _d;\n      if (((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.input) && ((_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.input.getAttribute('type')) === 'password' && ((_c = inputRef.current) === null || _c === void 0 ? void 0 : _c.input.hasAttribute('value'))) {\n        (_d = inputRef.current) === null || _d === void 0 ? void 0 : _d.input.removeAttribute('value');\n      }\n    }));\n  };\n  useEffect(function () {\n    if (triggerOnMount) {\n      removePasswordTimeout();\n    }\n    return function () {\n      return removePasswordTimeoutRef.current.forEach(function (timer) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n      });\n    };\n  }, []);\n  return removePasswordTimeout;\n}","map":null,"metadata":{},"sourceType":"module"}