{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { compute as e } from \"compute-scroll-into-view\";\nvar t = function t(e) {\n    return \"object\" == typeof e && \"function\" == typeof e.behavior;\n  },\n  o = function o(e) {\n    return !1 === e ? {\n      block: \"end\",\n      inline: \"nearest\"\n    } : function (e) {\n      return e === Object(e) && 0 !== Object.keys(e).length;\n    }(e) ? e : {\n      block: \"start\",\n      inline: \"nearest\"\n    };\n  };\nfunction n(n, l) {\n  if (!n.isConnected || !n.ownerDocument.documentElement.contains(n)) return;\n  if (t(l)) return l.behavior(e(n, l));\n  var i = \"boolean\" == typeof l || null == l ? void 0 : l.behavior;\n  var _iterator = _createForOfIteratorHelper(e(n, o(l))),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n        _t = _step$value.el,\n        r = _step$value.top,\n        c = _step$value.left;\n      _t.scroll({\n        top: r,\n        left: c,\n        behavior: i\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nexport { n as default };","map":null,"metadata":{},"sourceType":"module"}